<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">Racket Blog: Racket Blog</title>
 <link rel="self" href="http://blog.racket-lang.org/feeds/all.atom.xml" />
 <link href="http://blog.racket-lang.org/index.html" />
 <id>urn:http-blog-racket-lang-org:-index-html</id>
 <updated>2018-01-26T08:58:30Z</updated>
 <entry>
  <title type="text">Racket v6.12</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2018/01/racket-v6-12.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2018-01-racket-v6-12-html</id>
  <published>2018-01-26T08:58:30Z</published>
  <updated>2018-01-26T08:58:30Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Vincent St-Amour&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racket version 6.12 is now available from &lt;a href="http://racket-lang.org/"&gt;http://racket-lang.org/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;Changed the way some unsafe operations are exposed via &lt;code&gt;ffi/unsafe&lt;/code&gt;  libraries to help smooth a future transition to a new runtime system.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;syntax-parse&lt;/code&gt; form supports unwinding side-effects when it  backtracks, both explicitly with &lt;code&gt;~undo&lt;/code&gt; patterns and implicitly  with the built-in managed state (using &lt;code&gt;syntax-parse-state-ref&lt;/code&gt;,  etc).&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;db&lt;/code&gt; library supports SCRAM-SHA&amp;ndash;256 authentication for backends  running PostgreSQL 10 or later. Client support for SCRAM and other  SASL mechanisms is provided by the new &lt;code&gt;sasl&lt;/code&gt; library.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;lazy-require-syntax&lt;/code&gt; form supports lazy loading of macro  transformers. Note that the macros must obey certain implementation  constraints (see the &lt;code&gt;lazy-require-syntax&lt;/code&gt; documentation).&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket no longer enforces types like (U String (Boxof String))  with the any/c contract. This fixes a type soundness issue, but may  affect performance. Please submit a bug report if you find a program  that runs significantly slower on v6.12 than earlier versions.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket&amp;rsquo;s type instantiation (&lt;code&gt;inst&lt;/code&gt;) uses Any for omitted type  arguments, allowing APIs to add additional type variables to functions  without breaking existing programs.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;&lt;code&gt;for/fold&lt;/code&gt; users can customize the final result of a loop&amp;rsquo;s computation  using the &lt;code&gt;#:result&lt;/code&gt; keyword.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;--deps&lt;/code&gt; option to &lt;code&gt;raco test&lt;/code&gt; tests the packages the argument  packages depends on, in addition to testing the packages themselves.  For example, &lt;code&gt;raco test -p --deps pkg1 pkg2&lt;/code&gt; tests all files from  &lt;code&gt;pkg1&lt;/code&gt;, &lt;code&gt;pkg2&lt;/code&gt;, and all of their dependencies.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;The following people contributed to this release: Alexander Shopov, Alexis King, Andrew Gwozdziewycz, Andrew Kent, Ben Greenman, Chung-chieh Shan, Conor Finegan, Daniel Feltey, Daniel Mendler, Eric Dobson, Gabriel Ebner, Greg Cooper, Greg Hendershott, Gustavo Massaccesi, Huma Zafar, Jack Firth, James Bornholt, Jay McCarthy, John Clements, Kimball Germane, Leif Andersen, Matias Eyzaguirre, Matthew Butterick, Matthew Flatt, Matthias Felleisen, Michael Ballantyne, Mike Sperber, Milo Turner, Robby Findler, Rommel Martinez, Ryan Culpepper, Sam Tobin-Hochstadt, Shu-Hung You, Soula√Ømane Sahmi, Spencer Florence, Stephen De Gabrielle, Vincent St-Amour, Wesley Kerfoot, and William G Hatch.&lt;/p&gt;

&lt;p&gt;Feedback Welcome&lt;/p&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">Racket-on-Chez Status: January 2018</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2018/01/racket-on-chez-status.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2018-01-racket-on-chez-status-html</id>
  <published>2018-01-04T16:00:00Z</published>
  <updated>2018-01-04T16:00:00Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;span style="font-style: italic"&gt;posted by Matthew Flatt with thanks to collaborators
Kent Dybvig, Andy Keep, Gustavo Massaccesi, Sarah Spall, Sam Tobin-Hochstadt, and Jon Zeppieri&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s been almost a year since we
&lt;a href="https://groups.google.com/d/msg/racket-dev/2BV3ElyfF8Y/4RSd3XbECAAJ"&gt;decided
to try&lt;/a&gt; running &lt;a href="https://racket-lang.org/"&gt;Racket&lt;/a&gt; on
&lt;a href="https://www.scheme.com/"&gt;Chez Scheme&lt;/a&gt;, and it has been
almost six months since my last
&lt;a href="https://groups.google.com/d/msg/racket-dev/rkXuHNAmQaA/hjgPZHErAwAJ"&gt;status
report&lt;/a&gt;. As of &lt;a href="https://con.racket-lang.org/"&gt;RacketCon
2017&lt;/a&gt;, DrRacket could start up on Chez Scheme (but just barely, and
just in time for the demo).&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/racket/racket7/"&gt;current
implementation&lt;/a&gt; is now &lt;a data-pltdoc="x" href="#%28part._functionality%29"&gt;considerably more
complete&lt;/a&gt;. DrRacket still doesn&amp;rsquo;t run well, but Racket-on-Chez can
build a full Racket distribution in &lt;a data-pltdoc="x" href="#%28part._build%29"&gt;reasonable time
and space&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With the current Racket-on-Chez compilation strategy, runtime
performance is &lt;a data-pltdoc="x" href="#%28part._benchmarks%29"&gt;plausible on traditional
benchmarks&lt;/a&gt;, but cross-module optimization is needed to bring the
results fully in line with our expectations.
&lt;a data-pltdoc="x" href="#%28part._startup%29"&gt;Startup and load times&lt;/a&gt; are much slower than we
would like. &lt;a data-pltdoc="x" href="#%28part._build%29"&gt;Compile/build times&lt;/a&gt; are a factor of 4
slower than the current version of Racket.&lt;/p&gt;

&lt;blockquote class="refpara"&gt;
 &lt;blockquote class="refcolumn"&gt;
  &lt;blockquote class="refcontent"&gt;
   &lt;p&gt;&lt;/p&gt;
   &lt;div class="SIntrapara"&gt;Glossary of implementations:
&lt;/div&gt;
   &lt;div class="SIntrapara"&gt;
    &lt;ul&gt;
     &lt;li&gt;
      &lt;p&gt;&lt;span style="font-weight: bold"&gt;Racket&lt;/span&gt; &amp;#8212;
       &lt;wbr /&gt; the current Racket release, version 6.x&lt;/p&gt;&lt;/li&gt;
     &lt;li&gt;
      &lt;p&gt;&lt;span style="font-weight: bold"&gt;&lt;span class="stt"&gt;racket7&lt;/span&gt;&lt;/span&gt; &amp;#8212;
       &lt;wbr /&gt; mostly the same as Racket, but using a new,
                        Racket-implemented macro expander;
                        the source is in the
                        &lt;a href="https://github.com/racket/racket7"&gt;&lt;span class="url"&gt;https://github.com/racket/racket7&lt;/span&gt;&lt;/a&gt; repo&lt;/p&gt;&lt;/li&gt;
     &lt;li&gt;
      &lt;p&gt;&lt;span style="font-weight: bold"&gt;Chez Scheme&lt;/span&gt; &amp;#8212;
       &lt;wbr /&gt; a completely different implementation of
                       Scheme that we&amp;rsquo;re trying to use as a replacement
                       for part of Racket&lt;/p&gt;&lt;/li&gt;
     &lt;li&gt;
      &lt;p&gt;&lt;span style="font-weight: bold"&gt;Racket-on-Chez&lt;/span&gt; &amp;#8212;
       &lt;wbr /&gt; Chez Scheme plus additional layers to make
                          it implement the same language as Racket;
                          the source is also in the
                          &lt;a href="https://github.com/racket/racket7"&gt;&lt;span class="url"&gt;https://github.com/racket/racket7&lt;/span&gt;&lt;/a&gt; repo&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;

&lt;h1&gt;&lt;a name="(part._.Approach)"&gt;&lt;/a&gt;Approach&lt;/h1&gt;

&lt;p&gt;Our overall goal is to improve Racket&amp;rsquo;s implementation and
make it more portable to different runtime systems. To a first
approximation, improving Racket and making it more portable means
&amp;ldquo;less C code.&amp;rdquo; Building on a Chez Scheme is a promising means toward
that end.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table cellpadding="0" cellspacing="0"&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;
    &lt;p class="SubFlow"&gt;&lt;/p&gt;
    &lt;p&gt;The picture on the right illustrates the current Racket distribution.
The parts in blue are implemented in &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;Racket&lt;/span&gt;&lt;/span&gt;,
while the part in red is implemented in &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;C&lt;/span&gt;&lt;/span&gt;. The green
block is &lt;span style="color: forestgreen"&gt;&lt;span style="font-weight: bold"&gt;Scribble&lt;/span&gt;&lt;/span&gt; documentation source.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;The numbers next to each block are a rough lines-of-code counts, and
the blocks are scaled to those counts. The
&lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;collects&lt;/span&gt;&lt;/span&gt; block represents the content of the
main &lt;span class="stt"&gt;"collects"&lt;/span&gt; directory; along with the
&lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;core&lt;/span&gt;&lt;/span&gt; block, it&amp;rsquo;s roughly the code in a Minimal Racket
distribution. The &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;pkgs&lt;/span&gt;&lt;/span&gt; block is the part of the
main distribution that is available in separate packages but bundled
with the main distribution. The &lt;span style="color: forestgreen"&gt;&lt;span style="font-weight: bold"&gt;docs&lt;/span&gt;&lt;/span&gt; block is
spread across the same packages as the &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;pkgs&lt;/span&gt;&lt;/span&gt;
code.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;Porting Racket to Chez Scheme is all about the &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;core&lt;/span&gt;&lt;/span&gt;
part. The goal is to make no changes to existing
&lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;Racket&lt;/span&gt;&lt;/span&gt; and &lt;span style="color: forestgreen"&gt;&lt;span style="font-weight: bold"&gt;Scribble&lt;/span&gt;&lt;/span&gt; code,
although we&amp;rsquo;ll inevitably have to make small changes to support
multiple Racket implementations.&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict.png" alt="image" height="338.0" style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" width="90.46142578125" /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table cellpadding="0" cellspacing="0"&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;
    &lt;p class="SubFlow"&gt;&lt;/p&gt;
    &lt;p&gt;Let&amp;rsquo;s zoom into the &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;core&lt;/span&gt;&lt;/span&gt; part. (From now on, all the
pictures on the right are at this scale.)
The picture breaks the C code in Racket&amp;rsquo;s current
implementation into several major subsystems. In reality, the
implementation is not organized into such tidy layers, but
the picture is conceptually close to the truth.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;The large &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;builtins&lt;/span&gt;&lt;/span&gt; block implements primitive data
structures and their operations, such as numbers (fixnums, bignums,
flonums, exact rationals, complex numbers), strings, characters, byte
strings, lists, vectors, and hash tables. Most other blocks are
self-explanatory.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;The &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; block implements the macro expander,
reader, and module system. More than any other part of the current
stack, the &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; part is better implemented in
Racket.&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_2.png" alt="image" height="338.0" style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" width="144.0078125" /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table cellpadding="0" cellspacing="0"&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;
    &lt;p class="SubFlow"&gt;&lt;/p&gt;
    &lt;p&gt;That was exactly the work of 2016: building a new
&lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; to replace the C-implemented
&lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt;. You can use that &lt;span class="stt"&gt;racket7&lt;/span&gt; variant of
Racket now by building from the &lt;a href="http://github/racket/racket7"&gt;&lt;span class="url"&gt;http://github/racket/racket7&lt;/span&gt;&lt;/a&gt;
repo.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;This new &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; hasn&amp;rsquo;t made it into the
release, because a few interactions haven&amp;rsquo;t been sorted out: the macro
stepper, the demodularizer, and to some degree the decompiler. The
expander also runs at about half the speed of the C-implemented
expander, and that performance difference was part of the motivation
to investigate a new runtime system.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;Although the &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;compiler+JIT&lt;/span&gt;&lt;/span&gt; block is drawn the same as
before in this picture, it&amp;rsquo;s a slightly different compiler, because it
doesn&amp;rsquo;t know about modules or syntax objects. Instead, the compiler
works in terms of &lt;span style="font-style: italic"&gt;linklets&lt;/span&gt;, which are &lt;span class="stt"&gt;lambda&lt;/span&gt;-like
blocks of code that import and export variables. That separation of
expansion/modules from compilation helps enable the transition to a
different compiler and runtime system.&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_3.png" alt="image" height="341.0" style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" width="151.609375" /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table cellpadding="0" cellspacing="0"&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;
    &lt;p class="SubFlow"&gt;&lt;/p&gt;
    &lt;p&gt;And that brings us to Chez Scheme. The most obvious feature in the
picture on the right is that Chez Scheme&amp;rsquo;s C-implemented
&lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;kernel&lt;/span&gt;&lt;/span&gt; is a fraction of the implementation, while most
of Chez Scheme is more sensibly written in
&lt;span style="color: purple"&gt;&lt;span style="font-weight: bold"&gt;Scheme&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;Chez Scheme&amp;rsquo;s &lt;span style="color: purple"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; is considerably simpler
than Racket&amp;rsquo;s. Although Chez Scheme&amp;rsquo;s expander is hygienic and hugely
influential on Racket&amp;rsquo;s expander, Racket&amp;rsquo;s macro and module system
does a lot more.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;Chez Scheme&amp;rsquo;s &lt;span style="color: purple"&gt;&lt;span style="font-weight: bold"&gt;compiler&lt;/span&gt;&lt;/span&gt;, meanwhile, does a lot
more than Racket&amp;rsquo;s &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;compiler+JIT&lt;/span&gt;&lt;/span&gt;. The
&lt;span style="color: purple"&gt;&lt;span style="font-weight: bold"&gt;builtins&lt;/span&gt;&lt;/span&gt; functionality in Chez Scheme is similar
to Racket&amp;rsquo;s &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;builtins&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;Chez Scheme&amp;rsquo;s &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;GC&lt;/span&gt;&lt;/span&gt; (at the bottom) is tiny and elegant.
It lacks some functionality of Racket&amp;rsquo;s &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;GC&lt;/span&gt;&lt;/span&gt;, but
mostly it lacks Racket&amp;rsquo;s historical complexity for trying to cooperate
directly with C.&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_4.png" alt="image" height="342.43589743589746" style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" width="144.0078125" /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table cellpadding="0" cellspacing="0"&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;
    &lt;p class="SubFlow"&gt;&lt;/p&gt;
    &lt;p&gt;That brings us, finally, to the Racket-on-Chez picture. It starts with
the Chez Scheme stack and adds a &lt;span style="color: purple"&gt;&lt;span style="font-weight: bold"&gt;rumble&lt;/span&gt;&lt;/span&gt; block,
which extends Chez Scheme to match the current Racket&amp;rsquo;s
&lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;GC&lt;/span&gt;&lt;/span&gt; through &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;control+structs&lt;/span&gt;&lt;/span&gt; blocks.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;Mostly, &lt;span style="color: purple"&gt;&lt;span style="font-weight: bold"&gt;rumble&lt;/span&gt;&lt;/span&gt; is about immutable hash tables,
delimited continuations, applicable structures, structure types
properties, and impersonators/chaperones. We&amp;rsquo;ve given this layer of
functionality the name &lt;span style="font-weight: bold"&gt;Rumble&lt;/span&gt;, because it&amp;rsquo;s useful to have a
name for the language that hosts other layers that are built using
&lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;Racket&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
    &lt;p&gt;The &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;threads&lt;/span&gt;&lt;/span&gt;, &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;io&lt;/span&gt;&lt;/span&gt;, and
&lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;regexp&lt;/span&gt;&lt;/span&gt; blocks are entirely new implementations
of the corresponding blocks in the current Racket implementation. The
&lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;rktio&lt;/span&gt;&lt;/span&gt; block is used by &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;io&lt;/span&gt;&lt;/span&gt;, and
it&amp;rsquo;s the same as in current Racket: a portability layer over OS
facilities that is similar to (but more extensive than) code that is
in Chez Scheme&amp;rsquo;s &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;kernel&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_5.png" alt="image" height="344.15384615384613" style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" width="140.671875" /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;The &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; block (the same as for
&lt;span class="stt"&gt;racket7&lt;/span&gt;) sits on a small &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;schemify&lt;/span&gt;&lt;/span&gt; adaptor.
The &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;schemify&lt;/span&gt;&lt;/span&gt; layer converts Racket linklets into
plain Scheme functions, adjusting expressions as needed to support
applicable structures, to enforce left-to-right evaluation, and to
implement Racket&amp;rsquo;s allocation model for local functions (i.e., lift to
avoid closure allocation whenever possible).&lt;/p&gt;

&lt;p&gt;Naturally, the Racket-on-Chez implementation is bootstrapped by
applying the &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; and
&lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;schemify&lt;/span&gt;&lt;/span&gt; layers to themselves and the other
Racket-implemented parts of the stack, and then compiling the
schemified linklets using the Chez Scheme
&lt;span style="color: purple"&gt;&lt;span style="font-weight: bold"&gt;compiler&lt;/span&gt;&lt;/span&gt;. A thin &lt;span style="color: purple"&gt;&lt;span style="font-weight: bold"&gt;main&lt;/span&gt;&lt;/span&gt;
driver on top handles command-line arguments to load modules and start
the &lt;span class="RktSym"&gt;&lt;a class="RktValLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/Reading.html#%28def._%28%28quote._~23~25kernel%29._read%29%29"&gt;read&lt;/a&gt;&lt;/span&gt;&amp;ndash;&lt;span class="RktSym"&gt;&lt;a class="RktValLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/eval.html#%28def._%28%28quote._~23~25kernel%29._eval%29%29"&gt;eval&lt;/a&gt;&lt;/span&gt;&amp;ndash;&lt;span class="RktSym"&gt;&lt;a class="RktValLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/Writing.html#%28def._%28%28quote._~23~25kernel%29._print%29%29"&gt;print&lt;/a&gt;&lt;/span&gt; loop.&lt;/p&gt;

&lt;h1&gt;&lt;a name="(part._functionality)"&gt;&lt;/a&gt;Current Functionality&lt;/h1&gt;

&lt;p&gt;DrRacket starts up in Chez Scheme, and just starting DrRacket
exercises many Racket language constructs and libraries. The largest
Racket-on-Chez demonstration to date is building all of the packages
and documentation of the main Racket distribution. Building packages
and documentation, again, covers more Racket functionality than you
may expect, because our macros do interesting things, such as
typechecking and generating bitmap images. Also, the build process is
too long and complex to tolerate leaks or major inefficiencies.&lt;/p&gt;

&lt;p&gt;Still, many pieces are buggy, and closing the gap is mostly a matter
of plowing through the Racket test suites. The main
missing or incomplete pieces are: futures, places, and a &lt;span class="stt"&gt;racket&lt;/span&gt;
executable that starts Racket-on-Chez.&lt;/p&gt;

&lt;h1&gt;&lt;a name="(part._benchmarks)"&gt;&lt;/a&gt;Performance: Benchmark Sanity Check&lt;/h1&gt;

&lt;p&gt;The overall compilation story is not yet right in Racket-on-Chez,
partly because there&amp;rsquo;s no cross-module optimization. Functions like
&lt;span class="RktSym"&gt;&lt;a class="RktValLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/pairs.html#%28def._%28%28lib._racket%2Fprivate%2Fmap..rkt%29._map%29%29"&gt;map&lt;/a&gt;&lt;/span&gt;, &lt;span class="RktSym"&gt;&lt;a class="RktValLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/pairs.html#%28def._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._memq%29%29"&gt;memq&lt;/a&gt;&lt;/span&gt;, and &lt;span class="RktSym"&gt;&lt;a class="RktValLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/pairs.html#%28def._%28%28lib._racket%2Fprivate%2Flist..rkt%29._assv%29%29"&gt;assv&lt;/a&gt;&lt;/span&gt; need cross-module
optimization to be compiled well in Racket-on-Chez. Benchmarks
sometimes do not rely on cross-module optimization, however, and
preliminary benchmark measurements can be useful as a sanity
check on the ways that &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;schemify&lt;/span&gt;&lt;/span&gt; mangles
individual modules.&lt;/p&gt;

&lt;blockquote class="refpara"&gt;
 &lt;blockquote class="refcolumn"&gt;
  &lt;blockquote class="refcontent"&gt;
   &lt;p&gt;Benchmarks are in the &lt;span class="stt"&gt;racket-benchmark&lt;/span&gt; package
whose source is in the &lt;span class="stt"&gt;racket7&lt;/span&gt; repo.
The benchmarks run in Chez Scheme as R6RS libraries.
The difference between Racket and &lt;span class="stt"&gt;racket7&lt;/span&gt; is in the noise.&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;The table below shows a handful of rough benchmark results. You
should not take the results seriously, but they line up with my
overall impression of where we are.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table cellpadding="0" cellspacing="0"&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style="background-color: lightgray"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="center" colspan="21" style="background-color: lightgray"&gt;
    &lt;p&gt;Rough and unscientific benchmark numbers&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: lightgray"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span class="Smaller"&gt;msecs&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;deriv&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;dynamic&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;sboyer&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;maze&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;nfa&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Chez Scheme&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;770&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_6.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;360&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_7.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;1270&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_8.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;930&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_9.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;2100&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_10.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket-on-Chez&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;1560&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_11.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;1030&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_12.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;1470&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_13.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;1520&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_14.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;2200&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_15.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;2030&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_16.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;560&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_17.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;2230&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_18.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;1330&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_19.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;4100&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_20.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="26" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;All benchmarks were run in safe mode and &lt;span style="font-style: italic"&gt;without&lt;/span&gt; Gustavo&amp;rsquo;s
work-in-progress addition to the Chez Scheme compiler that can
eliminate some runtime checks and related dead code.&lt;/p&gt;

&lt;h1&gt;&lt;a name="(part._startup)"&gt;&lt;/a&gt;Performance: Startup&lt;/h1&gt;

&lt;p&gt;Startup time for Racket-on-Chez is determined by Chez Scheme&amp;rsquo;s base
startup time (to load boot files) plus time to load the
&lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; and other parts of the Racket-on-Chez
stack. The load times shown below for &lt;a class="RktModLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/index.html"&gt;&lt;span class="RktSym"&gt;racket/base&lt;/span&gt;&lt;/a&gt; and
&lt;a class="RktModLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/index.html"&gt;&lt;span class="RktSym"&gt;racket&lt;/span&gt;&lt;/a&gt; include the startup time and add the additional
time needed to load the many compiled files that are parts of those
libraries.&lt;/p&gt;

&lt;p&gt;For Racket and &lt;span class="stt"&gt;racket7&lt;/span&gt;, bytecode parsing can be delayed at the
granularity of a procedure, so that a procedure&amp;rsquo;s bytecode isn&amp;rsquo;t
parsed until the procedure is called. Delayed parsing is enabled by
default, and the &lt;span class="nobreak"&gt;&lt;span class="stt"&gt;-d&lt;/span&gt;&lt;/span&gt; flag disables it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table cellpadding="0" cellspacing="0"&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style="background-color: lightgray"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="center" colspan="13" style="background-color: lightgray"&gt;
    &lt;p&gt;Startup/load time&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: lightgray"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span class="Smaller"&gt;msecs&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;startup&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;&lt;span class="stt"&gt;-l racket/base&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;&lt;span class="stt"&gt;-l racket&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;16&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_21.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;50&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_22.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;220&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_23.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket &lt;span class="nobreak"&gt;&lt;span class="stt"&gt;-d&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;16&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_24.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;80&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_25.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;500&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_26.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span class="stt"&gt;racket7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;50&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_27.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;110&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_28.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;340&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_29.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span class="stt"&gt;racket7 -d&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;50&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_30.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;190&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_31.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;650&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_32.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Chez Scheme&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_33.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;170&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_34.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_35.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket-on-Chez&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;440&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_36.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;550&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_37.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;1200&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_38.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket-on-Chez/JIT&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;440&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_39.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;550&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_40.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;1600&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_41.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;Compared to the current Racket version, starting up and loading takes
longer in &lt;span class="stt"&gt;racket7&lt;/span&gt;, because &lt;span class="stt"&gt;racket7&lt;/span&gt; has to load embedded
bytecode for the expander&amp;rsquo;s implementation, and because the bytecode
encoding of linklets has not been refined as much.&lt;/p&gt;

&lt;p&gt;The Chez Scheme row in the table doesn&amp;rsquo;t actually load
&lt;a class="RktModLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/index.html"&gt;&lt;span class="RktSym"&gt;racket/base&lt;/span&gt;&lt;/a&gt;, but that&amp;rsquo;s the closest reasonable column.
That row corresponds to just starting Chez Scheme with its
compiler&amp;#8212;
 &lt;wbr /&gt;so it&amp;rsquo;s a signficantly smaller language than
&lt;a class="RktModLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/index.html"&gt;&lt;span class="RktSym"&gt;racket/base&lt;/span&gt;&lt;/a&gt;, but it&amp;rsquo;s more than the Racket
&lt;span style="font-weight: bold"&gt;startup&lt;/span&gt; rows. It&amp;rsquo;s also a lower bound on the Racket-on-Chez
&lt;span style="font-weight: bold"&gt;startup&lt;/span&gt; time.&lt;/p&gt;

&lt;p&gt;Loading Racket-on-Chez takes significantly longer, still, due to
larger and slower-to-load machine code for both the Racket-on-Chez
stack and libraries compiled with it. Although individual linklets
within a module (roughly, individual phases) are parsed on demand,
there is no delayed parsing at the granularity of procedures, so the
work performed by loading is closer to the Racket &lt;span class="nobreak"&gt;&lt;span class="stt"&gt;-d&lt;/span&gt;&lt;/span&gt; and
&lt;span class="stt"&gt;racket7 &lt;/span&gt;&lt;span class="nobreak"&gt;&lt;span class="stt"&gt;-d&lt;/span&gt;&lt;/span&gt; rows.&lt;/p&gt;

&lt;p&gt;The last row above, Racket-on-Chez/JIT, refers to a variant of
Racket-on-Chez that does not compile whole linklets. Instead, it keeps
individual &lt;span class="stt"&gt;lambda&lt;/span&gt;s in source form until called, and it compiles
each called &lt;span class="stt"&gt;lambda&lt;/span&gt; on demand. Load times go up, mostly because
code is compiled as needed, but also because the source-fragment
representation is even larger than machine code right now. The
Racket-on-Chez/JIT approach does not look the most promising, so far,
but it&amp;rsquo;s also not crazy. With more effort and tuning (especially in
the representation of source fragments), it may be a viable approach
and more in line with the way the current Racket implementation works.&lt;/p&gt;

&lt;p&gt;Clearly, load time is a direction for further effort.&lt;/p&gt;

&lt;h1&gt;&lt;a name="(part._expander)"&gt;&lt;/a&gt;Performance: Expander and Compiler&lt;/h1&gt;

&lt;p&gt;The &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; runs at about the same speed in
Racket-on-Chez and &lt;span class="stt"&gt;racket7&lt;/span&gt;, but the linklet-compilation step
takes much longer in Racket-on-Chez. As a result, compilation time for
Racket-on-Chez dominates expansion proper for a task like &lt;span class="stt"&gt;racket&lt;/span&gt;&lt;span class="stt"&gt;
&lt;/span&gt;&lt;span class="nobreak"&gt;&lt;span class="stt"&gt;-cl&lt;/span&gt;&lt;/span&gt;&lt;span class="stt"&gt; racket/base&lt;/span&gt;.&lt;/p&gt;

&lt;blockquote class="refpara"&gt;
 &lt;blockquote class="refcolumn"&gt;
  &lt;blockquote class="refcontent"&gt;
   &lt;p&gt;Reported times in this section use a Racket-on-Chez stack
that is compiled in unsafe mode and run on a 2013 MacBook Pro 2.6GHz
Core i5. Unsafe mode improves &lt;span style="font-weight: bold"&gt;expand&lt;/span&gt; and &lt;span style="font-weight: bold"&gt;read&lt;/span&gt; performance by about
10%.&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table cellpadding="0" cellspacing="0"&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style="background-color: lightgray"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="center" colspan="21" style="background-color: lightgray"&gt;
    &lt;p&gt;Steps within &lt;span class="stt"&gt;racket -cl racket/base&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: lightgray"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span class="Smaller"&gt;msecs&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;expand&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;schemify&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;compile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;eval&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;read&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span class="stt"&gt;racket7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;2511&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_42.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_43.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;662&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_44.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;235&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_45.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;275&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_46.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket-on-Chez&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;2398&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_47.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;917&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_48.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;2852&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_49.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;390&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_50.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;227&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_51.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket-on-Chez/JIT&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;2441&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_52.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;974&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_53.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;1044&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_54.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;515&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_55.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;229&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_56.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="31" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;For Racket-on-Chez/JIT, compile times go down, showing that about 1/3
of the code that is compiled during expansion is also run during
expansion. The fraction would be lower for most programs; the
&lt;a class="RktModLink" data-pltdoc="x" href="http://docs.racket-lang.org/reference/index.html"&gt;&lt;span class="RktSym"&gt;racket/base&lt;/span&gt;&lt;/a&gt; library is unusual in building up layers
of macros to implement itself. The &lt;span style="font-weight: bold"&gt;schemify&lt;/span&gt; step is certainly a
target for improvement, since its job is much simpler than the
&lt;span style="font-weight: bold"&gt;compile&lt;/span&gt; step&amp;rsquo;s job.&lt;/p&gt;

&lt;p&gt;That factor-of-2 slowdown relative to &lt;span class="stt"&gt;racket7&lt;/span&gt; is
compounded by the Racket-implemented &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt;
being twice as slow as the current Racket&amp;rsquo;s C-implemented
&lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt;:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table cellpadding="0" cellspacing="0"&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style="background-color: lightgray"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="center" colspan="9" style="background-color: lightgray"&gt;
    &lt;p&gt;Loading from source with &lt;span class="stt"&gt;racket -cl&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: lightgray"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span class="Smaller"&gt;msecs&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;&lt;span class="stt"&gt;racket/base&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" colspan="3" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold"&gt;&lt;span class="stt"&gt;racket&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;1830&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_57.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;21700&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_58.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;&lt;span class="stt"&gt;racket7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;3490&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_59.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;38140&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_60.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket-on-Chez&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;7060&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_61.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;70093&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_62.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="left" style="background-color: beige"&gt;
    &lt;p&gt;Racket-on-Chez/JIT&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;5400&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_63.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;55050&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td align="right" style="background-color: beige"&gt;
    &lt;p&gt;&lt;img src="/img/posts/2018-01-05-racket-on-chez-status/pict_64.png" alt="image" height="16" style="vertical-align: 0px; margin: -3px -3px -3px -3px;" width="56" /&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td&gt;
    &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td style="background-color: beige"&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;The gap between the Racket-implemented &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt;
and the C-implemented &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; is the one that we
most hoped to close by moving to Chez Scheme. As part of the
Racket-on-Chez stack, the &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; is already
compiled in a reasonable way (i.e., no cross-module optimization
issues), so it&amp;rsquo;s not clear how to improve. Still, I still think the
&lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; can be made to run faster in Chez
Scheme, and we&amp;rsquo;ll keep trying.&lt;/p&gt;

&lt;h1&gt;&lt;a name="(part._build)"&gt;&lt;/a&gt;Performance: Distribution Build&lt;/h1&gt;

&lt;p&gt;The current version of Racket-on-Chez builds on a 64-bit machine with
a peak memory use around 1.25 GB, which is on a similar scale to the
current Racket release&amp;rsquo;s peak memory use around 1 GB.&lt;/p&gt;

&lt;p&gt;The following plots show, on the same scale, memory use over time when
building a distribution. Each plot has two black lines (easiest to
distinguish in the last plot): the top black line describes peak
memory use, since it&amp;rsquo;s before a major GC, while the bottom black line
is closer to live-memory use, since it&amp;rsquo;s after a major GC. The orange
region is for compiling libraries (each vertical line starts a
collection), the blue region is for running documentation, the green
region is for rendering documentation, and the final pink region is
for re-rendering documentation as needed to reach a fix-point for
cross references. Memory use is expected to grow modestly during the
blue region, since the builds collecting cross-reference information
for use in the green region. Memory use should grow minimally in the
orange and green regions (as a side-effect of caches).&lt;/p&gt;

&lt;blockquote class="refpara"&gt;
 &lt;blockquote class="refcolumn"&gt;
  &lt;blockquote class="refcontent"&gt;
   &lt;p&gt;These graphs report builds on a Linux 3.4GHz Core i7-2600
machine with the Racket parts of the Racket-on-Chez stack compiled in
safe mode.&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
 &lt;table cellpadding="0" cellspacing="0"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td valign="top"&gt;
     &lt;blockquote class="SubFlow"&gt;
      &lt;p&gt;&lt;span style="font-weight: bold"&gt;Racket&lt;/span&gt;&lt;/p&gt;
      &lt;p&gt;C-implemented &lt;span style="color: red"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/td&gt;
    &lt;td&gt;
     &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
    &lt;td align="right"&gt;
     &lt;p&gt;
      &lt;object alt="" data="build-log-racket.svg" height="300.0pt" type="image/svg+xml" width="400.0pt"&gt;
       &lt;param name="src" value="build-log-racket.svg" /&gt;&lt;/object&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;
    &lt;td valign="top"&gt;
     &lt;p&gt;&lt;span class="Smaller"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
    &lt;td&gt;
     &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
    &lt;td align="right"&gt;
     &lt;p&gt;&lt;span class="Smaller"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;
    &lt;td valign="top"&gt;
     &lt;blockquote class="SubFlow"&gt;
      &lt;p&gt;&lt;span style="font-weight: bold"&gt;&lt;span class="stt"&gt;racket7&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;p&gt;Racket-implemented &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/td&gt;
    &lt;td&gt;
     &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
    &lt;td align="right"&gt;
     &lt;p&gt;
      &lt;object alt="" data="build-log-racket7.svg" height="300.0pt" type="image/svg+xml" width="400.0pt"&gt;
       &lt;param name="src" value="build-log-racket7.svg" /&gt;&lt;/object&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;
    &lt;td valign="top"&gt;
     &lt;p&gt;&lt;span class="Smaller"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
    &lt;td&gt;
     &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
    &lt;td align="right"&gt;
     &lt;p&gt;&lt;span class="Smaller"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
   &lt;tr&gt;
    &lt;td valign="top"&gt;
     &lt;blockquote class="SubFlow"&gt;
      &lt;p&gt;&lt;span style="font-weight: bold"&gt;Racket-on-Chez&lt;/span&gt;&lt;/p&gt;
      &lt;p&gt;Same &lt;span style="color: blue"&gt;&lt;span style="font-weight: bold"&gt;expander&lt;/span&gt;&lt;/span&gt; as &lt;span class="stt"&gt;racket7&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/td&gt;
    &lt;td&gt;
     &lt;p&gt;&lt;span class="hspace"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
    &lt;td align="right"&gt;
     &lt;p&gt;
      &lt;object alt="" data="build-log-cs.svg" height="300.0pt" type="image/svg+xml" width="400.0pt"&gt;
       &lt;param name="src" value="build-log-cs.svg" /&gt;&lt;/object&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/blockquote&gt;

&lt;p&gt;The plots illustrate that, while memory use is similar, build times
are much longer. &lt;a data-pltdoc="x" href="#%28part._expander%29"&gt;Expander and compiler
performance&lt;/a&gt; largely explains the difference.&lt;/p&gt;

&lt;p&gt;The build time certainly can be improved some. Maybe build times can
be improved significantly, or maybe slower build times will seem
worthwhile for a more maintainable implementation of Racket and/or
for faster generated code.&lt;/p&gt;

&lt;h1&gt;&lt;a name="(part._plan)"&gt;&lt;/a&gt;Outlook&lt;/h1&gt;

&lt;p&gt;It would be nice if porting to Chez Scheme made every aspect of Racket
magically faster. It hasn&amp;rsquo;t done that, but we have plenty of room for
improvement; the performance results to date are a lower bound on
performance, not an upper bound.&lt;/p&gt;

&lt;p&gt;Keep in mind that the original goal is not to have a faster Racket,
but a better-implemented Racket with acceptable performance. The
Racket-on-Chez implementation is far more maintainable and flexible
than the current Racket implementation, so maybe we&amp;rsquo;re half-way there
after one year of work.&lt;/p&gt;

&lt;p&gt;You can try Racket-on-Chez from
&lt;a href="https://github.com/racket/racket7/"&gt;&lt;span class="url"&gt;https://github.com/racket/racket7/&lt;/span&gt;&lt;/a&gt;. See
&lt;a href="https://github.com/racket/racket7/blob/master/racket/src/cs/README.txt"&gt;racket/src/cs/README.txt&lt;/a&gt;
in that repo for more information.&lt;/p&gt;

&lt;blockquote class="refpara"&gt;
 &lt;blockquote class="refcolumn"&gt;
  &lt;blockquote class="refcontent"&gt;
   &lt;p&gt;If you&amp;rsquo;re interested in even more implementation details and plans, see
the &lt;a href="http://www.cs.utah.edu/~mflatt/racket-on-chez-jan-2018/"&gt;extended version of this report&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;</content></entry>
 <entry>
  <title type="text">Refinement Types in Typed Racket</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/11/adding-refinement-types.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-11-adding-refinement-types-html</id>
  <published>2017-11-11T01:00:00Z</published>
  <updated>2017-11-11T01:00:00Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Andrew Kent&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With the Racket v6.11 release, Typed Racket has begun to support basic refinement and dependent function types. This post gives an overview for working with these types while writing some simple vector operations.&lt;/p&gt;

&lt;p&gt;Currently these types are documented under Typed Racket&amp;rsquo;s &lt;a href="https://docs.racket-lang.org/ts-reference/Experimental_Features.html"&gt;experimental features&lt;/a&gt;. They are experimental in the sense that they are relatively new. We look forward to improving their usefulness by incorporating user feedback.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you wish to experiment with refinement and/or dependent function types in the near future, you should use a &lt;a href="https://pre.racket-lang.org/installers/"&gt;snapshot build&lt;/a&gt;, as it will have additional features and bug fixes from user feedback. Some of the examples in this post will require a build from early November 2017 or later.&lt;/p&gt;
&lt;!-- more--&gt;

&lt;h1 id="refinement-types"&gt;Refinement Types&lt;/h1&gt;

&lt;p&gt;Let us examine the type of &lt;code&gt;vector-ref&lt;/code&gt; in Typed Racket:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.All))" style="color: inherit"&gt;All&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Integer))" style="color: inherit"&gt;Integer&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;It states that the index (the second argument) must be an &lt;code&gt;Integer&lt;/code&gt;, i.e. any whole-number value in the exclusive range (-‚àû , ‚àû). This description, however, is somewhat coarse: we obviously cannot use &lt;em&gt;any&lt;/em&gt; integer. To avoid a runtime error when indexing into a vector &lt;code&gt;v&lt;/code&gt;, we must use an integer in the range [0, &lt;code&gt;(vector-length
v)&lt;/code&gt;). With a refinement type we can precisely describe this subset of the integers:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Integer))" style="color: inherit"&gt;Integer&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;This refinement type describes values &lt;code&gt;i&lt;/code&gt; of type &lt;code&gt;Integer&lt;/code&gt; such that &lt;code&gt;(&amp;lt;= 0 i (- (vector-length v) 1))&lt;/code&gt; produces &lt;code&gt;#true&lt;/code&gt;. The documentation for &lt;a href="http://docs.racket-lang.org/search/index.html?q=Refine"&gt;Refine&lt;/a&gt; describes precisely what propositions can be used in refinements. Today it includes logical statements about the types of terms, standard logical combinators (e.g. and, or), and linear integer constraints.&lt;/p&gt;

&lt;h1 id="dependent-function-types"&gt;Dependent function types&lt;/h1&gt;

&lt;p&gt;By combining refinement types with dependent function types (i.e. functions whose domain and range may depend on argument and/or program values), we can now give a more precise function type for many basic vector operations, e.g.:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; 
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.All))" style="color: inherit"&gt;All&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Integer))" style="color: inherit"&gt;Integer&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))])&lt;/span&gt;
                &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-ref))" style="color: inherit"&gt;vector-ref&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Here we have stated that &lt;code&gt;safe-vector-ref&lt;/code&gt;&amp;rsquo;s second argument (&lt;code&gt;n&lt;/code&gt;) depends on its first argument (&lt;code&gt;v&lt;/code&gt;) and that the type of &lt;code&gt;n&lt;/code&gt; is an &lt;code&gt;Integer&lt;/code&gt; which is a valid index for &lt;code&gt;v&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If we try and use &lt;code&gt;safe-vector-ref&lt;/code&gt; with a vector and index which Typed Racket cannot prove satisfy the respective types:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector))" style="color: inherit"&gt;vector&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Typed Racket will report an error while type checking:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Type Checker: type mismatch
  expected: (Refine
             (i : Integer)
             (and (&amp;lt;= i (- (vector-length v) 1)) (&amp;lt;= 0 v)))
  given: (Refine (z : Positive-Byte) (= 2 z)) in: 2&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="preconditions"&gt;Preconditions&lt;/h2&gt;

&lt;p&gt;Sometimes the refinements used in a dependent function type can also be written conveniently as a &amp;ldquo;precondition&amp;rdquo;, e.g.:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;safe-vector-ref&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.All))" style="color: inherit"&gt;All&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Integer))" style="color: inherit"&gt;Integer&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="kd"&gt;#:pre&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-ref))" style="color: inherit"&gt;vector-ref&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;This function type is equivalent to the previous version, but the refining proposition that requires that &lt;code&gt;n&lt;/code&gt; be a valid index for &lt;code&gt;v&lt;/code&gt; now references &lt;code&gt;n&lt;/code&gt; directly and has been written after the list of arguments:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;#:pre&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;We can read the precondition specification above as follows: the precondition for the function depends on arguments &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; and it requires that Typed Racket can prove &lt;code&gt;(&amp;lt;= 0 n (- (vector-length v)
1))&lt;/code&gt; in order for a call to be well-typed.&lt;/p&gt;

&lt;p&gt;Typed Racket may be able to provide more detailed feedback when the arguments are of the correct type but the precondition cannot be proved:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Type Checker: could not apply function;
 unable to prove precondition
  precondition: (&amp;lt;= 2 (- (vector-length v) 1)) 
  in: (safe-vector-ref (vector 0 1) 2)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, Typed Racket first performed type inference and confirmed that the arguments &lt;code&gt;(vector 0 1)&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; had acceptable types before discovering the precondition was unprovable at the call site.&lt;/p&gt;

&lt;p&gt;We believe the error messages produced when using preconditions may be more informative in general. Your mileage may vary.&lt;/p&gt;

&lt;h1 id="programming-with-refinement-types"&gt;Programming with refinement types&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Note: the below examples will work on Racket v6.11 with one additional snippet of &lt;a href="#makevectortype"&gt;code&lt;/a&gt; or on any Racket build more recent than November 11 2017.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When programming with refinement types, use the &lt;code&gt;#:with-refinements&lt;/code&gt; option on the &lt;code&gt;#lang&lt;/code&gt; line to tell Typed Racket to track additional logical information about program terms:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; safe-vector-ops.rkt&lt;/span&gt;
&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;typed/racket/base&lt;/span&gt; &lt;span class="kd"&gt;#:with-refinements&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;In particular, this will tell Typed Racket to remember that the vector produced by &lt;code&gt;(make-vector n ...)&lt;/code&gt; has length &lt;code&gt;n&lt;/code&gt;, which will be essential for typing our vector operations.&lt;/p&gt;

&lt;p&gt;Now we can also declare more detailed types for &lt;code&gt;vector-set!&lt;/code&gt; and &lt;code&gt;vector-ref&lt;/code&gt; since these more specific types are subtypes of their more permissive standard types. If we&amp;rsquo;re feeling adventurous, we may use the &lt;code&gt;unsafe-&lt;/code&gt; variants from &lt;code&gt;racket/unsafe/ops&lt;/code&gt; that do not check their bounds, since Typed Racket proves they are never used with invalid indices:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._only-in))" style="color: inherit"&gt;only-in&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;racket/unsafe/ops&lt;/span&gt;
                  &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/reference/unsafe.html#(def._((lib._racket/unsafe/ops..rkt)._unsafe-vector-ref))" style="color: inherit"&gt;unsafe-vector-ref&lt;/a&gt;&lt;/span&gt;
                  &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/reference/unsafe.html#(def._((lib._racket/unsafe/ops..rkt)._unsafe-vector-set!))" style="color: inherit"&gt;unsafe-vector-set!&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;safe-vector-ref&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.All))" style="color: inherit"&gt;All&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="kd"&gt;#:pre&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/reference/unsafe.html#(def._((lib._racket/unsafe/ops..rkt)._unsafe-vector-ref))" style="color: inherit"&gt;unsafe-vector-ref&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;safe-vector-set!&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.All))" style="color: inherit"&gt;All&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="kd"&gt;#:pre&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Void))" style="color: inherit"&gt;Void&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;safe-vector-set!&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/reference/unsafe.html#(def._((lib._racket/unsafe/ops..rkt)._unsafe-vector-set!))" style="color: inherit"&gt;unsafe-vector-set!&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Now that we have these foundational operations in place (i.e. &lt;code&gt;make-vector&lt;/code&gt;, &lt;code&gt;safe-vector-ref&lt;/code&gt;, and &lt;code&gt;safe-vector-set!&lt;/code&gt;) , let&amp;rsquo;s see if we can define some of the &lt;a href="https://docs.racket-lang.org/reference/vectors.html"&gt;vector operations&lt;/a&gt; that are provided by &lt;code&gt;racket/base&lt;/code&gt; and &lt;code&gt;racket/vector&lt;/code&gt;, but with more precise types!&lt;/p&gt;

&lt;h2 id="build-vector"&gt;&lt;code&gt;build-vector&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s look at the documentation for &lt;code&gt;build-vector&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(build-vector n proc) ‚Üí vector?
  n : exact-nonnegative-integer?
  proc : (exact-nonnegative-integer? . -&amp;gt; . any/c)

Creates a vector of n elements by applying proc to the
integers from 0 to (sub1 n) in order. If vec is the 
resulting vector, then (vector-ref vec i) is the value 
produced by (proc i).

Example:
&amp;gt; (build-vector 5 add1)
'#(1 2 3 4 5)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First let&amp;rsquo;s consider its type signature. It seems like there are two places where we could use refinement types to create a more precise type-based specification:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;
  &lt;p&gt;the &lt;code&gt;proc&lt;/code&gt; procedure will always be given an integer in the range [0, &lt;code&gt;n&lt;/code&gt;), and&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;the length of the returned vector is equal to &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;We can encode both of these directly in the type of &lt;code&gt;build-vector&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((lib._racket/private/list..rkt)._build-vector))" style="color: inherit"&gt;build-vector&lt;/a&gt;&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.All))" style="color: inherit"&gt;All&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                       &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3d))" style="color: inherit"&gt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;With the type signature in place, we can proceed to define the function:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((lib._racket/private/list..rkt)._build-vector))" style="color: inherit"&gt;build-vector&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._cond))" style="color: inherit"&gt;cond&lt;/a&gt;&lt;/span&gt;
    &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;init-val&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._make-vector))" style="color: inherit"&gt;make-vector&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;init-val&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/let.html#(form._((lib._racket/private/letstx-scheme..rkt)._let))" style="color: inherit"&gt;let&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;loop!&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/when_unless.html#(form._((lib._racket/private/letstx-scheme..rkt)._when))" style="color: inherit"&gt;when&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-set!&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loop!&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._add1))" style="color: inherit"&gt;add1&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
     &lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._else))" style="color: inherit"&gt;else&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector))" style="color: inherit"&gt;vector&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;There are a few things to note about the definition:&lt;/p&gt;

&lt;p&gt;a. In order to make a &lt;code&gt;(Vectorof A)&lt;/code&gt;, we need some value of type &lt;code&gt;A&lt;/code&gt; to initialize the vector with (i.e. the second arg to &lt;code&gt;make-vector&lt;/code&gt;). Because of this, we first check if &lt;code&gt;n&lt;/code&gt; is greater than 0. If it is greater than 0, we can compute &lt;code&gt;(proc 0)&lt;/code&gt; and use that to initialize the vector we create, otherwise we simply return &lt;code&gt;(vector)&lt;/code&gt; (i.e. an empty vector) which is &amp;ldquo;vacuously&amp;rdquo; a vector of &lt;code&gt;A&lt;/code&gt; for any &lt;code&gt;A&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;b. The recursive loop we use to populate indices 1 through &lt;code&gt;(sub1 n)&lt;/code&gt;, which we named &lt;code&gt;loop!&lt;/code&gt;, requires a type annotation &lt;code&gt;Natural&lt;/code&gt; on its argument &lt;code&gt;i&lt;/code&gt; so that its being greater than or equal to 0 is known in the body of the recursive function. That, combined with the test &lt;code&gt;(&amp;lt; i
n)&lt;/code&gt;, allows us to successfully use &lt;code&gt;safe-vector-set!&lt;/code&gt; to update the contents at &lt;code&gt;i&lt;/code&gt;. (Note: if Typed Racket had smarter type inference, this annotation may not be necessary.)&lt;/p&gt;

&lt;h2 id="vector-map"&gt;&lt;code&gt;vector-map&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;vector-map&lt;/code&gt; takes a vector &lt;code&gt;vec&lt;/code&gt; and a function &lt;code&gt;proc&lt;/code&gt; and produces a new vector &lt;code&gt;vec*&lt;/code&gt; where &lt;code&gt;(vector-ref vec* i)&lt;/code&gt; equals &lt;code&gt;(proc
(vector-ref vec i))&lt;/code&gt; for each valid index &lt;code&gt;i&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((lib._racket/vector..rkt)._vector-map))" style="color: inherit"&gt;vector-map&lt;/a&gt;&lt;/span&gt; &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._add1))" style="color: inherit"&gt;add1&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector))" style="color: inherit"&gt;vector&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;'#&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Because we now have a version of &lt;code&gt;build-vector&lt;/code&gt; that uses refinement types to more precisely describe its specification (see previous section), we can implement &lt;code&gt;vector-map&lt;/code&gt; entirely in terms of &lt;code&gt;build-vector&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((lib._racket/vector..rkt)._vector-map))" style="color: inherit"&gt;vector-map&lt;/a&gt;&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.All))" style="color: inherit"&gt;All&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;vec&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3d))" style="color: inherit"&gt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((lib._racket/vector..rkt)._vector-map))" style="color: inherit"&gt;vector-map&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((lib._racket/private/list..rkt)._build-vector))" style="color: inherit"&gt;build-vector&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/lambda.html#(form._((lib._racket/private/base..rkt)._~ce~bb))" style="color: inherit"&gt;Œª&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                           &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="p"&gt;)))])&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Now &lt;code&gt;vector-map&lt;/code&gt;&amp;rsquo;s type indicates that the length of the returned vector is equal to the length of the vector it received as input.&lt;/p&gt;

&lt;h2 id="vector-copy"&gt;&lt;code&gt;vector-copy&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;vector-copy&lt;/code&gt; takes a vector &lt;code&gt;vec&lt;/code&gt; and copies its elements in the range [&lt;code&gt;start&lt;/code&gt;,&lt;code&gt;end&lt;/code&gt;) into a fresh vector:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((lib._racket/vector..rkt)._vector-copy))" style="color: inherit"&gt;vector-copy&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector))" style="color: inherit"&gt;vector&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;'#&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;To precisely type this function, we will use a precondition to assert the range specified by &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; is some sensible (although possibly empty) portion of the input vector &lt;code&gt;vec&lt;/code&gt;. A &lt;code&gt;Refine&lt;/code&gt; allows us to indicate that the length of the returned vector will always be &lt;code&gt;(- end start)&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((lib._racket/vector..rkt)._vector-copy))" style="color: inherit"&gt;vector-copy&lt;/a&gt;&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.All))" style="color: inherit"&gt;All&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;vec&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="kd"&gt;#:pre&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vec&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3d))" style="color: inherit"&gt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;))))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((lib._racket/vector..rkt)._vector-copy))" style="color: inherit"&gt;vector-copy&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._cond))" style="color: inherit"&gt;cond&lt;/a&gt;&lt;/span&gt;
    &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3d))" style="color: inherit"&gt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector))" style="color: inherit"&gt;vector&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._else))" style="color: inherit"&gt;else&lt;/a&gt;&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._make-vector))" style="color: inherit"&gt;make-vector&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/let.html#(form._((lib._racket/private/letstx-scheme..rkt)._let))" style="color: inherit"&gt;let&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;loop!&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/when_unless.html#(form._((lib._racket/private/letstx-scheme..rkt)._when))" style="color: inherit"&gt;when&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-set!&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loop!&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
     &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;h2 id="vector-copy"&gt;&lt;code&gt;vector-copy!&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;vector-copy!&lt;/code&gt; is similar, but instead of returning a fresh vector, the elements in the specified range are copied from a source vector &lt;code&gt;s&lt;/code&gt; into a destination vector &lt;code&gt;d&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector))" style="color: inherit"&gt;vector&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"p"&lt;/span&gt; &lt;span class="s2"&gt;"e"&lt;/span&gt; &lt;span class="s2"&gt;"a"&lt;/span&gt; &lt;span class="s2"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector))" style="color: inherit"&gt;vector&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-copy!))" style="color: inherit"&gt;vector-copy!&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;
&lt;span class="o"&gt;'#&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="s2"&gt;"e"&lt;/span&gt; &lt;span class="s2"&gt;"a"&lt;/span&gt; &lt;span class="s2"&gt;"r"&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Here the precondition is larger because it includes constraints that must hold with respect to both vectors &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt;, i.e. the range in the source &lt;code&gt;s&lt;/code&gt; [&lt;code&gt;s-start&lt;/code&gt;,&lt;code&gt;s-end&lt;/code&gt;) must be a valid, and the destination vector &lt;code&gt;d&lt;/code&gt; must have a corresponding valid range [&lt;code&gt;d-start&lt;/code&gt;,&lt;code&gt;(+ d-start (- s-end s-start))&lt;/code&gt;):&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-copy!))" style="color: inherit"&gt;vector-copy!&lt;/a&gt;&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.All))" style="color: inherit"&gt;All&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d-start&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s-start&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s-end&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="kd"&gt;#:pre&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;d-start&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;s-start&lt;/span&gt; &lt;span class="n"&gt;s-end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._and))" style="color: inherit"&gt;and&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;s-start&lt;/span&gt; &lt;span class="n"&gt;s-end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;d-start&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;s-end&lt;/span&gt; &lt;span class="n"&gt;s-start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;d-start&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
                &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Void))" style="color: inherit"&gt;Void&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-copy!))" style="color: inherit"&gt;vector-copy!&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;d-start&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;s-start&lt;/span&gt; &lt;span class="n"&gt;s-end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((lib._racket/list..rkt)._count))" style="color: inherit"&gt;count&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;s-end&lt;/span&gt; &lt;span class="n"&gt;s-start&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/let.html#(form._((lib._racket/private/letstx-scheme..rkt)._let))" style="color: inherit"&gt;let&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;loop!&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/when_unless.html#(form._((lib._racket/private/letstx-scheme..rkt)._when))" style="color: inherit"&gt;when&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((lib._racket/list..rkt)._count))" style="color: inherit"&gt;count&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;s-start&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-set!&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;d-start&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loop!&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;h2 id="quicksort"&gt;quicksort&lt;/h2&gt;

&lt;p&gt;Finally, here is a version of quicksort that has been typed using dependent function types to sort vectors of reals:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;quicksort!&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Real))" style="color: inherit"&gt;Real&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Void))" style="color: inherit"&gt;Void&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quicksort!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quicksort-helper!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;quicksort-helper!&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Real))" style="color: inherit"&gt;Real&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Integer))" style="color: inherit"&gt;Integer&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                  &lt;span class="kd"&gt;#:pre&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._and))" style="color: inherit"&gt;and&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
                  &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Void))" style="color: inherit"&gt;Void&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quicksort-helper!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/when_unless.html#(form._((lib._racket/private/letstx-scheme..rkt)._when))" style="color: inherit"&gt;when&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;pivot&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;partition!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quicksort-helper!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;pivot&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quicksort-helper!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;pivot&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;


&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;swap!&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Real))" style="color: inherit"&gt;Real&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
             &lt;span class="kd"&gt;#:pre&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._and))" style="color: inherit"&gt;and&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
             &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Void))" style="color: inherit"&gt;Void&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;swap!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-set!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-set!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;



&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;partition!&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Real))" style="color: inherit"&gt;Real&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                  &lt;span class="kd"&gt;#:pre&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pivot&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;pivot&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;partition!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;pivot&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/let.html#(form._((lib._racket/private/letstx-scheme..rkt)._let))" style="color: inherit"&gt;let&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;outer-loop!&lt;/span&gt;
    &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._and))" style="color: inherit"&gt;and&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                                     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/let.html#(form._((lib._racket/private/letstx-scheme..rkt)._let))" style="color: inherit"&gt;let&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i-loop!&lt;/span&gt;
      &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._cond))" style="color: inherit"&gt;cond&lt;/a&gt;&lt;/span&gt;
        &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._and))" style="color: inherit"&gt;and&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c))" style="color: inherit"&gt;&amp;lt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i-loop!&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._else))" style="color: inherit"&gt;else&lt;/a&gt;&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/let.html#(form._((lib._racket/private/letstx-scheme..rkt)._let))" style="color: inherit"&gt;let&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;j-loop!&lt;/span&gt;
           &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._and))" style="color: inherit"&gt;and&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3c~3d))" style="color: inherit"&gt;&amp;lt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
           &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._cond))" style="color: inherit"&gt;cond&lt;/a&gt;&lt;/span&gt;
             &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._and))" style="color: inherit"&gt;and&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e~3d))" style="color: inherit"&gt;&amp;gt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e~3d))" style="color: inherit"&gt;&amp;gt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j-loop!&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._-))" style="color: inherit"&gt;-&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
             &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;swap!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                      &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
             &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._else))" style="color: inherit"&gt;else&lt;/a&gt;&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;swap!&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outer-loop!&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)]))]))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;h1 id="typeduntyped-interaction"&gt;Typed/Untyped interaction&lt;/h1&gt;

&lt;p&gt;Typed Racket will generate dependent function contracts (e.g. &lt;a href="https://docs.racket-lang.org/reference/function-contracts.html?q=-%3Ei#%28form._%28%28lib._racket%2Fcontract%2Fbase..rkt%29._-~3ei%29%29"&gt;-&amp;gt;i&lt;/a&gt; contracts) to protect dependent functions when they are used in untyped modules:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;racket/base&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"safe-vector-ops.rkt"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;safe-vector-ref&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector))" style="color: inherit"&gt;vector&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; produces:&lt;/span&gt;
&lt;span class="c1"&gt;;;&lt;/span&gt;
&lt;span class="c1"&gt;;; safe-vector-ref: contract violation&lt;/span&gt;
&lt;span class="c1"&gt;;;  #:pre condition violation; ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;As always, care should be taken when designing APIs that involve contract boundaries which may be frequently crossed by performance sensitive code since each boundary crossing will involve runtime checks for the respective types.&lt;/p&gt;

&lt;h1 id="final-notes"&gt;Final Notes&lt;/h1&gt;

&lt;h2 id="linear-integer-arithmetic"&gt;Linear integer arithmetic&lt;/h2&gt;

&lt;p&gt;Typed Racket today only reasons about linear integer constraints, i.e. arithmetic constraints expressible with &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, and &lt;code&gt;or&lt;/code&gt; over &lt;a href="https://en.wikipedia.org/wiki/Linear_combination"&gt;linear combinations&lt;/a&gt; of select program terms. If the specification you wish to encode in types requires non-linear arithmetic, Typed Racket will not be able to verify those constraints.&lt;/p&gt;

&lt;h2 id="dependent-function-type-limitations"&gt;Dependent function type limitations&lt;/h2&gt;

&lt;p&gt;Dependent function types currently only support mandatory positional arguments. In the future we plan to add optional, rest, and keyword argument support.&lt;/p&gt;

&lt;p&gt;Currently functions with dependencies between arguments and/or preconditions cannot be used within a &lt;code&gt;case-&amp;gt;&lt;/code&gt; form.&lt;/p&gt;

&lt;p&gt;There is not yet support for dependent struct types.&lt;/p&gt;

&lt;h2 id="type-checking-the-above-examples-in-racket-v611"&gt;Type checking the above examples in Racket v6.11&lt;/h2&gt;

&lt;p&gt;&lt;a name="makevectortype"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To type check the examples in this post on Racket v6.11, the following snippet must be added to the module:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;typed/racket/unsafe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Unsafe_Typed_Racket_operations.html#(form._((lib._typed/racket/unsafe..rkt)._unsafe-require/typed/provide))" style="color: inherit"&gt;unsafe-require/typed/provide&lt;/a&gt;&lt;/span&gt;
 &lt;span class="n"&gt;typed/racket/base&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._make-vector))" style="color: inherit"&gt;make-vector&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.All))" style="color: inherit"&gt;All&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/function-contracts.html#(form._((lib._racket/contract/base..rkt)._-~3e))" style="color: inherit"&gt;-&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Natural))" style="color: inherit"&gt;Natural&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                           &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/Experimental_Features.html#(form._((lib._typed-racket/base-env/base-types-extra..rkt)._.Refine))" style="color: inherit"&gt;Refine&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/special-forms.html#(form._((lib._typed-racket/base-env/prims..rkt)._~3a))" style="color: inherit"&gt;:&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/ts-reference/type-ref.html#(form._((lib._typed-racket/base-env/base-types..rkt)._.Vectorof))" style="color: inherit"&gt;Vectorof&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                             &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3d))" style="color: inherit"&gt;=&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/vectors.html#(def._((quote._~23~25kernel)._vector-length))" style="color: inherit"&gt;vector-length&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)))))])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;This axiomatizes a more specific type for &lt;code&gt;make-vector&lt;/code&gt;. Any snapshot builds of Racket from November 10 2017 or later will not require this snippet.&lt;/p&gt;

&lt;h2 id="bugs"&gt;Bugs&lt;/h2&gt;

&lt;p&gt;If you have found a bug or have an idea for how these features might be more useful, feel free to open an issue on Typed Racket&amp;rsquo;s &lt;a href="https://github.com/racket/typed-racket/issues"&gt;github repo&lt;/a&gt;.&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">Racket v6.11</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/10/racket-v6-11.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-10-racket-v6-11-html</id>
  <published>2017-10-30T09:42:32Z</published>
  <updated>2017-10-30T09:42:32Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Vincent St-Amour&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racket version 6.11 is now available from &lt;a href="http://racket-lang.org/"&gt;http://racket-lang.org/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;A bug preventing OneDrive users on Windows 10 Fall Creators update  from opening files has been fixed.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket supports refinement types and dependent function types.  Previously an experimental feature, refinement types allow types to  describe more interesting properties of values, especially integers.  For example, this type shows that the &lt;code&gt;max&lt;/code&gt; function always produces a  number at least as big as its inputs:  &lt;code&gt;(-&amp;gt; ([x : Integer] [y : Integer])
       (Refine [z : Integer] (and (&amp;gt;= z x) (&amp;gt;= z y))))&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;DrRacket&amp;rsquo;s Program Contour is significantly more efficient; using it  no longer hurts DrRacket&amp;rsquo;s interactivity.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;web-server/formlets&lt;/code&gt; library produces formlets that are  serializable, facilitating dynamic uses of formlets in stateless #lang  web-server servlets. The new &lt;code&gt;web-server/formlets/stateless&lt;/code&gt; and  &lt;code&gt;web-server/formlets/unsafe&lt;/code&gt; libraries provide additional support with  the same API.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;db&lt;/code&gt; library supports the Cassandra database.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;The following people contributed to this release: Alex Knauth, Andrew Gwozdziewycz, Andrew Kent, Asumu Takikawa, Ben Greenman, Ben Noordhuis, Carlo Dapor, Daniel Feltey, David Christiansen, David Van Horn, Eric Dobson, Gustavo Massaccesi, Harold Carr, Jack Firth, Jay McCarthy, Jeannie Tran, Jens Axel S√∏gaard, jgreco, John Clements, Jordan Johnson, Justin Slepak, Leandro Facchinetti, Leif Andersen, Matthew Butterick, Matthew Flatt, Matthias Felleisen, Michael Ballantyne, Milo Turner, Nadeem Abdul Hamid, Philip McGrath, rain, Robby Findler, Royall Spence, Ryan Culpepper, Ryan Davis, Sam Tobin-Hochstadt, Shu-Hung You, Spencer Florence, Stephen Chang, Vincent St-Amour, WarGrey Gyoudmon Ju, and Weng Shiwei.&lt;/p&gt;

&lt;p&gt;Feedback Welcome&lt;/p&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">Tutorial: Creating a Package</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/10/tutorial-creating-a-package.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-10-tutorial-creating-a-package-html</id>
  <published>2017-10-11T07:46:21Z</published>
  <updated>2017-10-11T07:46:21Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Stephen Chang&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This post is a summary of a tutorial presented at &lt;a href="http://con.racket-lang.org/2017/"&gt;RacketCon 2017&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It describes how to create a package starting from a single Racket file.&lt;/p&gt;

&lt;p&gt;Specifically, this post explains how to:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;use &lt;code&gt;raco pkg install&lt;/code&gt; to install a package,&lt;/li&gt;
 &lt;li&gt;create an &lt;code&gt;info.rkt&lt;/code&gt; file containing package metadata, and&lt;/li&gt;
 &lt;li&gt;add a package to  &lt;a href="https://pkgs.racket-lang.org"&gt;Racket&amp;rsquo;s official package catalog&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;!-- more--&gt;

&lt;h2 id="packages-vs-collections"&gt;Packages vs Collections&lt;/h2&gt;

&lt;p&gt;Before getting started, we first clarify some terminology. (&lt;a href="http://blog.racket-lang.org/2015/08/modules-packages-and-collections.html"&gt;This blog post&lt;/a&gt; explains packages and collections in more depth.)&lt;/p&gt;

&lt;p&gt;In Racket, a library is just a &lt;a href="http://docs.racket-lang.org/guide/module-basics.html"&gt;module&lt;/a&gt; (typically in its own file) that exports some bindings. A programmer may import such a module using a (relative or absolute) filepath:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"path/to/filename.rkt"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;A Racket &lt;a href="http://docs.racket-lang.org/guide/module-basics.html#%28tech._collection%29"&gt;&lt;strong&gt;collection&lt;/strong&gt;&lt;/a&gt; is a &amp;ldquo;hierarchical group of modules&amp;rdquo; that are &lt;em&gt;installed&lt;/em&gt;, i.e., their source files are copied to a standard location that Racket manages. This allows programmers to use them without worrying about their location on disk:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;scribble&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;data/queue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Finally, a &lt;a href="http://docs.racket-lang.org/pkg/Package_Concepts.html?#%28tech._package%29"&gt;&lt;strong&gt;package&lt;/strong&gt;&lt;/a&gt; is Racket&amp;rsquo;s mechanism for organizing and distributing collections (or parts of collections). A package may contain multiple modules spanning multiple collections. The &lt;a href="https://pkgs.racket-lang.org"&gt;official Racket package catalog&lt;/a&gt; is a popular source of packages, but github repos or even local directories may act as packages as well.&lt;/p&gt;

&lt;h2 id="local-package-installation"&gt;Local Package Installation&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s best to follow this tutorial with a running example. We&amp;rsquo;ll use &lt;a href="https://github.com/stchang/plot-bestfit/tree/racketcon2017-tutorial"&gt;this one&lt;/a&gt;. To start, &lt;code&gt;clone&lt;/code&gt; the repo with &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;cd&lt;/code&gt; to the repo root directory.&lt;/p&gt;

&lt;p&gt;The rest of the tutorial assumes all files are in a &lt;code&gt;plot-bestfit/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/stchang/plot-bestfit/blob/racketcon2017-tutorial/bestfit.rkt"&gt;&lt;code&gt;bestfit.rkt&lt;/code&gt; file&lt;/a&gt; in our library computes best-fit lines for Racket&amp;rsquo;s &lt;a href="http://docs.racket-lang.org/plot/index.html"&gt;&lt;code&gt;plot&lt;/code&gt;&lt;/a&gt; library.&lt;/p&gt;

&lt;p&gt;A &lt;a href="https://github.com/stchang/plot-bestfit/blob/racketcon2017-tutorial/test-plot.rkt"&gt;&lt;code&gt;test-plot.rkt&lt;/code&gt; file&lt;/a&gt; (in the same directory) uses the &lt;code&gt;plot&lt;/code&gt;, &lt;code&gt;math&lt;/code&gt;, and &lt;code&gt;bestfit.rkt&lt;/code&gt; libraries, importing them like this:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; test-plot.rkt&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;
	 &lt;span class="n"&gt;math&lt;/span&gt;
	 &lt;span class="s2"&gt;"bestfit.rkt"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Having to specify a file path in order to use &lt;code&gt;bestfit.rkt&lt;/code&gt; is somewhat brittle, however, since it depends on the exact location of the file on disk. Instead, we can install our library as a collection:&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# run from `plot-bestfit/` directory&lt;/span&gt;
$ raco pkg install
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Running &lt;code&gt;raco pkg install&lt;/code&gt; as described above installs the contents of the current directory as a single-collection package, using the directory name as the name of both the package and the collection.&lt;/p&gt;

&lt;p&gt;Alternatively, we can give &lt;code&gt;raco pkg install&lt;/code&gt; an explicit path. The following command, executed from the parent directory, is identical to the above command:&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# run from parent of `plot-bestfit/` directory&lt;/span&gt;
&lt;span class="c1"&gt;# you may need to run `raco pkg remove plot-bestfit` before trying this command&lt;/span&gt;
&lt;span class="c1"&gt;# (don&amp;#39;t forget the `/`! omitting it will install from the pkg server instead)&lt;/span&gt;
$ raco pkg install plot-bestfit/
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;After installing the package/collection, &lt;code&gt;test-plot.rkt&lt;/code&gt; may use a collection path instead of a file path to import &lt;code&gt;bestfit.rkt&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; test-plot.rkt&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;
	 &lt;span class="n"&gt;math&lt;/span&gt;
	 &lt;span class="n"&gt;plot-bestfit/bestfit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;The require path is still somewhat cumbersome, however, considering that our entire package consists of a single file. To shorten the path that programmers must write, we may take advantage of the fact that &lt;a href="http://docs.racket-lang.org/guide/module-basics.html#%28part._.Library_.Collections%29"&gt;&lt;code&gt;require&lt;/code&gt; implicitly looks for a &lt;code&gt;main&lt;/code&gt; module&lt;/a&gt;. Specifically, we add (in the &lt;code&gt;plot-bestfit/&lt;/code&gt; directory) a &lt;code&gt;main.rkt&lt;/code&gt; file with contents:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; main.rkt&lt;/span&gt;
&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;racket&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"bestfit.rkt"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._provide))" style="color: inherit"&gt;provide&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._all-from-out))" style="color: inherit"&gt;all-from-out&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"bestfit.rkt"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Now we may shorten the requires to:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; test-plot.rkt&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;
	 &lt;span class="n"&gt;math&lt;/span&gt;
	 &lt;span class="n"&gt;plot-bestfit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;The name of the collection, however, was chosen automatically to match the name of the directory we happened to put our files in. In the next section, we&amp;rsquo;ll show how programmers can more directly specify package metadata such as the collection name.&lt;/p&gt;

&lt;h2 id="specifying-package-metadata"&gt;Specifying Package Metadata&lt;/h2&gt;

&lt;p&gt;The Racket package system looks for metadata in an &lt;a href="http://docs.racket-lang.org/pkg/metadata.html"&gt;&lt;code&gt;info.rkt&lt;/code&gt; file&lt;/a&gt;, if one exists. Let&amp;rsquo;s create one for our package. Specifically, we add (in the &lt;code&gt;plot-bestfit/&lt;/code&gt; directory) an &lt;code&gt;info.rkt&lt;/code&gt; file with contents:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; info.rkt&lt;/span&gt;
&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;info&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="s2"&gt;"bestfit"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;This directs Racket to name our collection &lt;code&gt;bestfit&lt;/code&gt;, instead of using the directory name (the package name will still be the directory name). Thus if we re-install our package:&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# remove old installation&lt;/span&gt;
$ raco pkg remove plot-bestfit
&lt;span class="c1"&gt;# re-install, from the `plot-bestfit/` directory&lt;/span&gt;
$ raco pkg install
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;we may import the collection with the new name (note that &lt;code&gt;test-plot.rkt&lt;/code&gt; may emit an eror during the &lt;code&gt;raco pkg install&lt;/code&gt; above if it still uses the old collection name):&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; test-plot.rkt&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;
	 &lt;span class="n"&gt;math&lt;/span&gt;
	 &lt;span class="n"&gt;bestfit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;h3 id="specifying-dependencies"&gt;Specifying Dependencies&lt;/h3&gt;

&lt;p&gt;Another useful &lt;code&gt;info.rkt&lt;/code&gt; field is &lt;code&gt;deps&lt;/code&gt;, which specifies other packages on which our package depends. During package installation, Racket will automatically ask to additionally install any such dependencies.&lt;/p&gt;

&lt;p&gt;We could add the dependencies ourselves, but an easier way is to use &lt;code&gt;raco
setup&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ raco setup --fix-pkg-deps bestfit
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;After having &lt;code&gt;raco setup&lt;/code&gt; repair the &lt;code&gt;deps&lt;/code&gt;, our &lt;code&gt;info.rkt&lt;/code&gt; looks like:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;info&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="s2"&gt;"bestfit"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;deps&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"base"&lt;/span&gt;
               &lt;span class="s2"&gt;"math-lib"&lt;/span&gt;
               &lt;span class="s2"&gt;"plot-gui-lib"&lt;/span&gt;
               &lt;span class="s2"&gt;"plot-lib"&lt;/span&gt;
               &lt;span class="s2"&gt;"typed-racket-lib"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;h3 id="specifying-docs"&gt;Specifying Docs&lt;/h3&gt;

&lt;p&gt;Package installation additionally looks to compile and register documentation for the package. A &lt;code&gt;scribblings&lt;/code&gt; field in &lt;code&gt;info.rkt&lt;/code&gt; points to the documentation source file.&lt;/p&gt;

&lt;p&gt;For example, we might add to our &lt;code&gt;info.rkt&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; info.rkt&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;scribblings&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s2"&gt;"scribblings/bestfit.scrbl"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Formally, the &lt;a href="http://docs.racket-lang.org/raco/setup-info.html?#%28idx._%28gentag._11._%28lib._scribblings%2Fraco%2Fraco..scrbl%29%29%29"&gt;&lt;code&gt;scribblings&lt;/code&gt; entry&lt;/a&gt; is a list of lists, where each sublist begins with a documentation source filename and is followed by various options. In our &lt;code&gt;info.rkt&lt;/code&gt; file, we have one sublist that contains only the documentation source file and does not specify any other options.&lt;/p&gt;

&lt;p&gt;See the &lt;a href="https://gist.github.com/florence/b3fcc1df922008604e64362484dc1c28"&gt;notes from the &amp;ldquo;Scribbling documentation&amp;rdquo; tutorial&lt;/a&gt; to learn how to write documentation.&lt;/p&gt;

&lt;p&gt;When we are done writing our docs, we can use the &lt;code&gt;raco&lt;/code&gt; tools to compile and view them in rendered form.&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# re-compiles `bestfit` collection and its docs&lt;/span&gt;
$ raco setup bestfit
&lt;span class="c1"&gt;# launch browser to view local docs&lt;/span&gt;
$ raco docs
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;h2 id="raco-pkg-new"&gt;&lt;code&gt;raco pkg new&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;When creating a new package, a convenient way to generate stubs for all the files described in this tutorial (and more) is to run:&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# produces directory `my-pkg/` which contains the file stubs&lt;/span&gt;
$ raco pkg new my-pkg
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;h2 id="the-racket-package-server"&gt;The Racket Package Server&lt;/h2&gt;

&lt;p&gt;At this point, assume that we&amp;rsquo;ve created all the files described in this tutorial and we have pushed them to a github repo. We will use this repo as an example: &lt;a href="https://github.com/stchang/plot-bestfit"&gt;https://github.com/stchang/plot-bestfit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To distribute our package where others may discover and download it, we can add the package to the Racket package catalog at &lt;a href="https://pkgs.racket-lang.org/"&gt;https://pkgs.racket-lang.org/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To add a package to the catalog:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;&amp;ldquo;register&amp;rdquo; for an account,&lt;/li&gt;
 &lt;li&gt;&amp;ldquo;sign in&amp;rdquo; to the account,&lt;/li&gt;
 &lt;li&gt;click the &amp;ldquo;add your own&amp;rdquo; button on the front page,&lt;/li&gt;
 &lt;li&gt;and supply the requested information.&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;If we named our package &amp;ldquo;my-bestfit-pkg&amp;rdquo;, then any Racket user may install our package by running:&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ raco pkg install my-bestfit-pkg
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Running the above command will look up the package repo from the package catalog, and then download and install the package source files from that repo.&lt;/p&gt;

&lt;h2 id="single--vs-multi-collection-packages"&gt;Single- vs Multi-Collection Packages&lt;/h2&gt;

&lt;p&gt;The package we created in this tutorial consists of a single collection. Alternatively, packages may contain several modules spanning multiple collections.&lt;/p&gt;

&lt;p&gt;Such packages must be declared as multi-collection packages by changing the &lt;code&gt;collection&lt;/code&gt; entry in &lt;code&gt;info.rkt&lt;/code&gt; to have value &lt;code&gt;'multi&lt;/code&gt;. This directs Racket package installation to treat each subdirectory in the package as its own collection (or partial collection).&lt;/p&gt;

&lt;p&gt;For example, the &lt;a href="https://github.com/racket/drracket/tree/master/drracket"&gt;&lt;code&gt;drracket&lt;/code&gt; package&lt;/a&gt; leverages this organization style to implement its toolbar. Specifically, it adds a &lt;code&gt;tool.rkt&lt;/code&gt; module to many different collections, such as the &lt;code&gt;macro-debugger&lt;/code&gt; and &lt;code&gt;scribble&lt;/code&gt;, in order to access their callback hooks. Observe that in addition to the package&amp;rsquo;s root &lt;code&gt;info.rkt&lt;/code&gt;, &lt;em&gt;each&lt;/em&gt; collection in this kind of package uses its own &lt;code&gt;info.rkt&lt;/code&gt; to specify collection-specific information such as documentation.&lt;/p&gt;

&lt;p&gt;Indeed, any package that wishes to add to an existing collection, even if it&amp;rsquo;s just one collection, should be declared as &lt;code&gt;'multi&lt;/code&gt;. See the &lt;a href="https://github.com/samth/persistent-array"&gt;&lt;code&gt;persistent-array&lt;/code&gt; package&lt;/a&gt; for an example.&lt;/p&gt;

&lt;h2 id="a-final-note-on-multi-package-libraries"&gt;A Final Note on Multi-Package Libraries&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Most programmers will not need to worry about this section.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;ve browsed the Racket source files at all, you may have noticed that many core libraries further subdivide their contents into &lt;em&gt;several packages&lt;/em&gt;. The organization is typically arranged as:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;a base package &lt;code&gt;X&lt;/code&gt; with just an &lt;code&gt;info.rkt&lt;/code&gt; file,&lt;/li&gt;
 &lt;li&gt;an &lt;code&gt;X-lib&lt;/code&gt; package that contains most of the source files,&lt;/li&gt;
 &lt;li&gt;an &lt;code&gt;X-doc&lt;/code&gt; package with the documentation files,&lt;/li&gt;
 &lt;li&gt;and an &lt;code&gt;X-test&lt;/code&gt; package with the test files.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;In this setup, the &lt;code&gt;info.rkt&lt;/code&gt; in the base &lt;code&gt;X&lt;/code&gt; package typically specifies &lt;code&gt;X-lib&lt;/code&gt; and &lt;code&gt;X-doc&lt;/code&gt; as dependencies. This division enables users to more finely manage dependencies, i.e., a programmer may want to use the main package but may not want to install the tests (and its dependencies).&lt;/p&gt;

&lt;p&gt;See the &lt;a href="https://github.com/racket/pict"&gt;pict package&lt;/a&gt; for a concrete example of a library organized in this manner.&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">Tutorial: Contributing to Racket</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/09/tutorial-contributing-to-racket.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-09-tutorial-contributing-to-racket-html</id>
  <published>2017-09-26T17:07:20Z</published>
  <updated>2017-09-26T17:07:20Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Ben Greenman, with help from Matthew Butterick and Robby Findler and Jack Firth and Vincent St-Amour and Sam Tobin-Hochstadt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This post describes 3 ways to contribute to Racket:  (1) fixing a typo online,  (2) submitting a pull request to the &lt;a href="https://github.com/racket/racket"&gt;&lt;code&gt;racket/racket&lt;/code&gt;&lt;/a&gt; repository, and  (3) submitting a pull request to a repository in the &lt;a href="https://github.com/racket"&gt;Racket GitHub organization&lt;/a&gt;.&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;The source code for Racket is on GitHub. Everything that comes with &lt;a href="http://docs.racket-lang.org/reference/index.html"&gt;&lt;code&gt;#lang racket&lt;/code&gt;&lt;/a&gt;  is online at &lt;a href="https://github.com/racket/racket"&gt;https://github.com/racket/racket&lt;/a&gt;. This includes the &lt;a href="https://github.com/racket/racket/tree/master/racket/src"&gt;compiler&lt;/a&gt;,  the &lt;a href="https://github.com/racket/racket/tree/master/racket/collects/raco"&gt;raco&lt;/a&gt; command-line tool,  and the libraries for basic datatypes. Other packages included in the &lt;a href="https://pkgd.racket-lang.org/pkgn/search?q=main-distribution"&gt;main distribution&lt;/a&gt;  are online in repositories owned by the &lt;a href="https://github.com/racket"&gt;&lt;code&gt;racket&lt;/code&gt; GitHub organization&lt;/a&gt;. These repos include &lt;a href="https://github.com/racket/htdp"&gt;&lt;code&gt;racket/htdp&lt;/code&gt;&lt;/a&gt;,  &lt;a href="https://github.com/racket/rackunit"&gt;&lt;code&gt;racket/rackunit&lt;/code&gt;&lt;/a&gt;, and  &lt;a href="https://github.com/racket/typed-racket"&gt;&lt;code&gt;racket/typed-racket&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Anyone with a &lt;a href="https://help.github.com/articles/signing-up-for-a-new-github-account/"&gt;GitHub account&lt;/a&gt;  can contribute to Racket by &lt;a href="https://help.github.com/articles/fork-a-repo/"&gt;forking a repository&lt;/a&gt;  and &lt;a href="https://help.github.com/articles/creating-a-pull-request/"&gt;submitting a pull request&lt;/a&gt;. To help streamline the process for potential contributors,  this post explains how to submit a quality pull request for three kinds of tasks:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Fixing a typo&lt;/li&gt;
 &lt;li&gt;Contributing to the &lt;a href="https://github.com/racket/racket"&gt;&lt;code&gt;racket&lt;/code&gt;&lt;/a&gt; language&lt;/li&gt;
 &lt;li&gt;Contributing to a &lt;a href="https://pkgd.racket-lang.org/pkgn/search?q=main-distribution"&gt;main distribution&lt;/a&gt; package&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;If you have any trouble following along, ask for help via  &lt;a href="https://groups.google.com/forum/#!forum/racket-users"&gt;email&lt;/a&gt;,  &lt;a href="https://botbot.me/freenode/racket/"&gt;IRC&lt;/a&gt;,  and/or &lt;a href="http://racket-slack.herokuapp.com/"&gt;Slack&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;For a Git crash course, see: &lt;a href="http://rogerdudler.github.io/git-guide/"&gt;http://rogerdudler.github.io/git-guide/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
 &lt;p&gt;See also: &lt;a href="http://blog.racket-lang.org/2012/11/tutorial-contributing-to-racket.html"&gt;Contributing to Racket&lt;/a&gt; (the 2012 edition) and &lt;a href="http://www.greghendershott.com/2013/04/a-guide-for-infrequent-contributors-to-racket.html"&gt;Guide for Infrequent Contributors&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 id="how-to-fix-a-typo"&gt;How to fix a typo&lt;/h2&gt;

&lt;p&gt;If you find a typo in the &lt;a href="https://docs.racket-lang.org"&gt;Racket documentation&lt;/a&gt;,  there&amp;rsquo;s an &amp;ldquo;easy&amp;rdquo; way to submit a fix:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Find the documentation source on GitHub&lt;/li&gt;
 &lt;li&gt;Click the &amp;ldquo;Edit this File&amp;rdquo; button (looks like a pencil: &lt;a href="https://github.com/racket/racket-lang-org/blob/master/blog/_src/posts/2017-09-27-tutorial-contributing-to-racket.md"&gt;&lt;img src="/img/edit-this-file-github-button.png" title="Edit this File" alt="'Edit this File' button" /&gt;&lt;/a&gt;)&lt;/li&gt;
 &lt;li&gt;Use GitHub to fork the repo and submit a pull request&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;The good news is that GitHub makes it easy to create the pull request. The bad news is that it can be difficult to find the right file to edit.&lt;/p&gt;

&lt;h3 id="hints-for-finding-documentation"&gt;Hints for finding documentation&lt;/h3&gt;

&lt;p&gt;The source for &lt;a href="http://docs.racket-lang.org/reference/index.html"&gt;The Racket Reference&lt;/a&gt; is here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/racket/racket/tree/master/pkgs/racket-doc/scribblings/reference"&gt;https://github.com/racket/racket/tree/master/pkgs/racket-doc/scribblings/reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The source for &lt;a href="http://docs.racket-lang.org/guide/index.html"&gt;The Racket Guide&lt;/a&gt; is here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/racket/racket/tree/master/pkgs/racket-doc/scribblings/guide"&gt;https://github.com/racket/racket/tree/master/pkgs/racket-doc/scribblings/guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To find the documentation for a main distribution package &lt;code&gt;&amp;lt;PKG&amp;gt;&lt;/code&gt;:  (1) go to &lt;code&gt;github.com/racket/&amp;lt;PKG&amp;gt;&lt;/code&gt;,  (2) open the top-level folder named &lt;code&gt;&amp;lt;PKG&amp;gt;-doc/&lt;/code&gt;, and  (3) search for a sub-folder (or sub-sub-folder) named &lt;code&gt;scribblings/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Clicking any section header in the docs will display a module path that  should be close to the documentation&amp;rsquo;s actual source. For example, &lt;a href="http://docs.racket-lang.org/redex/The_Redex_Reference.html"&gt;The Redex Reference&lt;/a&gt;  has a section titled &amp;ldquo;Patterns&amp;rdquo;. Clicking the section header reveals the module path &lt;a href="https://github.com/racket/redex?path=redex-doc/redex/redex.scrbl"&gt;&lt;code&gt;"redex/redex.scrbl"&lt;/code&gt;&lt;/a&gt;. This module &lt;strong&gt;does not&lt;/strong&gt; contain the documentation on &amp;ldquo;Patterns&amp;rdquo;, but  it includes documentation from the relative path &lt;a href="https://github.com/racket/redex?path=redex-doc/redex/scribblings/ref.scrbl"&gt;&lt;code&gt;"scribblings/ref.scrbl"&lt;/code&gt;&lt;/a&gt;  which includes documentation from the relative path &lt;a href="https://github.com/racket/redex?path=redex-doc/redex/scribblings/ref/patterns.scrbl"&gt;&lt;code&gt;"ref/patterns.scrbl"&lt;/code&gt;&lt;/a&gt;. That last file contains the documentation on patterns.&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;You are in a mazy of twisty little module paths, all alike.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See &lt;a href="http://docs.racket-lang.org/reference/collects.html"&gt;Section 18.2&lt;/a&gt; of The Racket Reference for more about module paths.&lt;/p&gt;

&lt;p&gt;If this sounds like too much work, an alternative is to (1) clone the repo,  (2) use your operating system (e.g., &lt;code&gt;grep&lt;/code&gt;) to find the right file, and  (3) go back to GitHub to do the edit and submit a pull request.&lt;/p&gt;

&lt;h2 id="how-to-contribute-to-the-racket-language"&gt;How to contribute to the &lt;code&gt;racket&lt;/code&gt; language&lt;/h2&gt;

&lt;p&gt;If you find a bug in &lt;a href="https://github.com/racket/racket/blob/master/racket/collects/racket/list.rkt"&gt;&lt;code&gt;racket/list&lt;/code&gt;&lt;/a&gt;,  or want to add an example to the documentation for &lt;a href="https://github.com/racket/racket/blob/master/racket/collects/racket/class.rkt"&gt;&lt;code&gt;racket/class&lt;/code&gt;&lt;/a&gt;,  or think of a useful addition to &lt;a href="https://github.com/racket/racket/blob/master/racket/collects/racket/logging.rkt"&gt;&lt;code&gt;racket/logging&lt;/code&gt;&lt;/a&gt;,  then you will want to install Racket from source to create a pull request.&lt;/p&gt;

&lt;h3 id="step-1-install-from-source"&gt;Step 1. Install from source&lt;/h3&gt;

&lt;p&gt;To install Racket from source, (1) clone the &lt;a href="https://github.com/racket/racket"&gt;&lt;code&gt;racket/racket&lt;/code&gt;&lt;/a&gt; repository  and (2) run its Makefile.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/racket/racket
$ cd racket
$ make&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;blockquote&gt;
 &lt;p&gt;Estimated time: 3 hours&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To build the Minimal Racket, run &lt;code&gt;make base&lt;/code&gt; instead of &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To build the Minimal Racket and test suite, run &lt;code&gt;make PKGS=racket-test&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="step-2-create-a-fork-on-github"&gt;Step 2. Create a fork on GitHub&lt;/h3&gt;

&lt;p&gt;The next step is &lt;a href="https://help.github.com/articles/fork-a-repo/"&gt;to fork&lt;/a&gt;  the &lt;a href="https://github.com/racket/racket"&gt;&lt;code&gt;racket/racket&lt;/code&gt;&lt;/a&gt; repo on GitHub and  add the fork as a &lt;a href="https://help.github.com/articles/adding-a-remote/"&gt;remote&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Inside the newly-cloned `racket/` directory ...
$ git remote add fork https://github.com/&amp;lt;YOUR-USERNAME&amp;gt;/racket&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;h3 id="step-3-create-a-pull-request"&gt;Step 3. Create a pull request&lt;/h3&gt;

&lt;p&gt;From here you can make a branch for your changes,  do the edits, and push to your fork.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout -b my-edits
# do edits
$ git commit
$ git push fork my-edits&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;p&gt;Once &lt;code&gt;git push&lt;/code&gt; finishes, visit &lt;a href="https://github.com/racket/racket"&gt;https://github.com/racket/racket&lt;/a&gt; If you are logged-in, there will be a green button to &amp;ldquo;Compare &amp;amp; pull request&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;img src="/img/compare-and-pull-request-github-button.png" title="Compare &amp;amp; pull request" alt="'Compare &amp;amp; pull request' button" /&gt;&lt;/p&gt;

&lt;p&gt;Click it, and GitHub will show a diff between the pushed branch on your  fork and the &lt;code&gt;master&lt;/code&gt; branch on the &lt;a href="https://github.com/racket/racket"&gt;&lt;code&gt;racket/racket&lt;/code&gt;&lt;/a&gt; repo.&lt;/p&gt;

&lt;h3 id="hints-for-navigating-the-racketracket-repo"&gt;Hints for navigating the &lt;code&gt;racket/racket&lt;/code&gt; repo&lt;/h3&gt;

&lt;p&gt;Built-in &lt;a href="http://docs.racket-lang.org/guide/module-basics.html?q=collect#%28tech._collection%29"&gt;collections&lt;/a&gt;  are in the folder &lt;a href=""&gt;&lt;code&gt;racket/collects&lt;/code&gt;&lt;/a&gt;. For example, &lt;a href="https://github.com/racket/racket/tree/master/racket/collects/data"&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt;  &lt;a href="https://github.com/racket/racket/tree/master/racket/collects/json"&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;,  &lt;a href="https://github.com/racket/racket/tree/master/racket/collects/net"&gt;&lt;code&gt;net&lt;/code&gt;&lt;/a&gt;, and  &lt;a href="https://github.com/racket/racket/tree/master/racket/collects/syntax"&gt;&lt;code&gt;syntax&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The source for &lt;a href="http://docs.racket-lang.org/reference/index.html"&gt;&lt;code&gt;#lang racket&lt;/code&gt;&lt;/a&gt;  is in the folder &lt;a href="https://github.com/racket/racket?path=racket/collects/racket"&gt;&lt;code&gt;racket/collects/racket&lt;/code&gt;&lt;/a&gt;. This includes the &lt;a href="https://github.com/racket/racket?path=racket/collects/racket/lang/reader.rkt"&gt;reader&lt;/a&gt;,  the &lt;a href="https://github.com/racket/racket?path=racket/collects/racket/match"&gt;&lt;code&gt;racket/match&lt;/code&gt;&lt;/a&gt; package, and  the &lt;a href="https://github.com/racket/racket?path=racket/collects/racket/cmdline.rkt"&gt;&lt;code&gt;racket/cmdline&lt;/code&gt;&lt;/a&gt; library.&lt;/p&gt;

&lt;p&gt;The source for the compiler is in &lt;a href="https://github.com/racket/racket?path=racket/src"&gt;&lt;code&gt;racket/src&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tests for the &lt;a href="http://docs.racket-lang.org/reference/index.html"&gt;&lt;code&gt;racket&lt;/code&gt;&lt;/a&gt; language may be under the:  &lt;a href="https://github.com/racket/racket/tree/master/pkgs/racket-test-core"&gt;&lt;code&gt;racket-test-core/&lt;/code&gt;&lt;/a&gt;,  &lt;a href="https://github.com/racket/racket/tree/master/pkgs/racket-test"&gt;&lt;code&gt;racket-test/&lt;/code&gt;&lt;/a&gt;, or  &lt;a href="https://github.com/racket/racket/tree/master/pkgs/racket-test-extra"&gt;&lt;code&gt;racket-test-extra/&lt;/code&gt;&lt;/a&gt;  directories.&lt;/p&gt;

&lt;h3 id="hints-for-compiling-and-testing"&gt;Hints for compiling and testing&lt;/h3&gt;

&lt;p&gt;To recompile everything and rebuild the documentation, run &lt;a href="http://docs.racket-lang.org/raco/setup.html"&gt;&lt;code&gt;raco setup&lt;/code&gt;&lt;/a&gt; using  the &lt;code&gt;raco&lt;/code&gt; executable from the cloned repository. To run the core suite of unit tests, run &lt;a href="http://docs.racket-lang.org/raco/test.html?q=raco%20setup"&gt;&lt;code&gt;raco test -l tests/racket/test&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# From the root of the racket repo ...
$ ./racket/bin/raco setup
$ ./racket/bin/raco test -l tests/racket/test&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;blockquote&gt;
 &lt;p&gt;Estimated time for &lt;code&gt;setup&lt;/code&gt;: 1&amp;ndash;4 hours&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
 &lt;p&gt;Estimated time for &lt;code&gt;test&lt;/code&gt;: 1 hour&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 id="how-to-contribute-to-a-main-distribution-package"&gt;How to contribute to a main distribution package&lt;/h2&gt;

&lt;p&gt;The Racket &lt;a href="https://pkgd.racket-lang.org/pkgn/search?q=main-distribution"&gt;main distribution&lt;/a&gt;  includes many packages, such as:  &lt;a href="https://github.com/racket/games"&gt;&lt;code&gt;games&lt;/code&gt;&lt;/a&gt;,  &lt;a href="https://github.com/racket/drracket"&gt;&lt;code&gt;drracket&lt;/code&gt;&lt;/a&gt;,  &lt;a href="https://github.com/racket/math"&gt;&lt;code&gt;math&lt;/code&gt;&lt;/a&gt;,  &lt;a href="https://github.com/racket/pict"&gt;&lt;code&gt;pict&lt;/code&gt;&lt;/a&gt;,  &lt;a href="https://github.com/racket/redex"&gt;&lt;code&gt;redex&lt;/code&gt;&lt;/a&gt;, and  &lt;a href="https://github.com/racket/scribble"&gt;&lt;code&gt;scribble&lt;/code&gt;&lt;/a&gt;. The source for each package is on GitHub, in a repository owned by the &lt;a href="https://github.com/racket/racket"&gt;&lt;code&gt;racket&lt;/code&gt;&lt;/a&gt;  organization.&lt;/p&gt;

&lt;p&gt;The first step in contributing to a main distribution package is to get its source code. Depending on how you installed Racket, there are two ways to get the source:&lt;/p&gt;

&lt;h3 id="step-1a-if-you-installed-racket-from-source-"&gt;Step 1a. If you installed Racket from source &amp;hellip;&lt;/h3&gt;

&lt;p&gt;If you installed Racket from source, the following command makes a clone  of the repository for the package &lt;code&gt;&amp;lt;PKG&amp;gt;&lt;/code&gt; in the current directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ raco pkg update --clone &amp;lt;PKG&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;blockquote&gt;
 &lt;p&gt;Estimated time: 1 hour&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If &lt;code&gt;raco pkg update --clone&lt;/code&gt; asks whether to clone dependencies, say yes.&lt;/p&gt;

&lt;p&gt;The recommended place to store clones is in a directory named &lt;code&gt;extra-pkgs/&lt;/code&gt;  at the top level of your clone of &lt;code&gt;racket/racket&lt;/code&gt;. This directory is recommended because the &lt;code&gt;racket&lt;/code&gt; repo &lt;a href="https://github.com/racket/racket/blob/master/.gitignore"&gt;ignores it&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="1b-if-you-have-a-pre-compiled-version-of-racket-"&gt;1b. If you have a pre-compiled version of Racket &amp;hellip;&lt;/h3&gt;

&lt;p&gt;If you have a compiled version of Racket, i.e. from &lt;a href="https://download.racket-lang.org"&gt;https://download.racket-lang.org&lt;/a&gt;,  the following pair of commands makes a clone of the repository for the  package &lt;code&gt;&amp;lt;PKG&amp;gt;&lt;/code&gt; in the current directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ raco pkg update --no-setup --catalog https://pkgs.racket-lang.org &amp;lt;PKG&amp;gt;
$ raco pkg update --clone &amp;lt;PKG&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;p&gt;If &lt;code&gt;raco pkg update --clone&lt;/code&gt; asks whether to clone dependencies, say yes.&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;Estimated time: 1 hour&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3 id="2-create-a-fork-on-github"&gt;2. Create a fork on GitHub&lt;/h3&gt;

&lt;p&gt;After installing the package, make sure &lt;a href="https://help.github.com/articles/fork-a-repo/"&gt;to fork&lt;/a&gt;  the &lt;code&gt;racket/&amp;lt;PKG&amp;gt;&lt;/code&gt; repo and add your fork as a remote:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add fork https://github.com/&amp;lt;YOUR-USERNAME&amp;gt;/&amp;lt;PKG&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;h3 id="3-create-a-pull-request"&gt;3. Create a pull request&lt;/h3&gt;

&lt;p&gt;After creating the fork, you can make a new branch, commit changes, push to the fork,  and create a pull request.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout -b my-edits
# do edits
$ git commit
$ git push fork my-edits&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;p&gt;Visit GitHub to &lt;a href="https://help.github.com/articles/creating-a-pull-request/"&gt;create the pull request&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="hints-for-navigating-a-package"&gt;Hints for navigating a package&lt;/h3&gt;

&lt;p&gt;For a typical main distribution package &lt;code&gt;&amp;lt;PKG&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;The implementation is in the directory &lt;code&gt;&amp;lt;PKG&amp;gt;-lib/&amp;lt;PKG&amp;gt;&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;The docs are in the directory &lt;code&gt;&amp;lt;PKG&amp;gt;-doc/**/scribblings&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;Unit tests are in the directory &lt;code&gt;&amp;lt;PKG&amp;gt;-test&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;Some files may have additional tests in a submodule; look for &lt;a href="http://docs.racket-lang.org/guide/Module_Syntax.html#%28part._main-and-test%29"&gt;&lt;code&gt;(module+ test ....)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;DrRacket includes a few navigational tools:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;right-click an identifier, click &amp;ldquo;Open Defining File&amp;rdquo;&lt;/li&gt;
 &lt;li&gt;right-click a module name, click &amp;ldquo;Open &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
 &lt;li&gt;from the &amp;ldquo;File&amp;rdquo; menu, click &amp;ldquo;Open Require Path&amp;rdquo; and use the search box&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;The Emacs &lt;a href="https://github.com/greghendershott/racket-mode"&gt;&lt;code&gt;racket-mode&lt;/code&gt;&lt;/a&gt;  has similar shortcuts.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/takikawa/raco-find-collection"&gt;&lt;code&gt;raco-find-collection&lt;/code&gt;&lt;/a&gt;  package implements a command-line search tool. After installing, run &lt;code&gt;raco fc &amp;lt;COLLECTION-PATH&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re not sure where to add tests,  write a small program that tests your changes and submit it as a comment to the pull request. A repo manager can suggest how to work the script into the existing unit test suite.&lt;/p&gt;

&lt;h3 id="hints-for-compiling-and-testing"&gt;Hints for compiling and testing&lt;/h3&gt;

&lt;p&gt;To recompile the code and documentation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ raco setup &amp;lt;PKG&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;blockquote&gt;
 &lt;p&gt;Estimated time: 1&amp;ndash;5 minutes&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To view the documentation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ raco docs &amp;lt;PKG&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;p&gt;To run &lt;em&gt;some&lt;/em&gt; unit tests:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ raco test -c &amp;lt;PKG&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;br /&gt;

&lt;p&gt;The command(s) to run all unit tests depends on the package. Ask a repo owner, read the package&amp;rsquo;s &lt;code&gt;.travis.yml&lt;/code&gt; if it exists,  or check the &lt;a href="https://github.com/racket/racket/wiki/Release-Checklist"&gt;Racket release checklist&lt;/a&gt;  for help running all the &lt;code&gt;&amp;lt;PKG&amp;gt;&lt;/code&gt; tests.&lt;/p&gt;

&lt;h2 id="postscript-life-of-a-pull-request"&gt;Postscript: Life of a pull request&lt;/h2&gt;

&lt;p&gt;After submitting a pull request, you enter the &amp;ldquo;LGTM loop&amp;rdquo;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;do {
  sleep($a_few_hours);
  if ($changes_requested) {
    make_changes();
  }
  elsif ($one_week_with_no_comments) {
    send_gentle_reminder();
  }
} until ($LGTM);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This code is in Perl so you know not to take it too seriously.&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;Wait a few days for someone to review the pull request.  You should receive an email when this happens.&lt;/li&gt;
 &lt;li&gt;If a week goes by with no comment, consider sending a quick &amp;ldquo;ping, any  thoughts on this?&amp;rdquo; comment to the pull request.&lt;/li&gt;
 &lt;li&gt;If someones comments and requests changes, then make changes in a new commit  and push to your branch. GitHub will detect these changes and update the  pull request.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Eventually, someone will comment &amp;ldquo;LGTM&amp;rdquo; and merge your changes.&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;&amp;ldquo;LGTM&amp;rdquo; probably means &amp;ldquo;looks good to merge&amp;rdquo;. It&amp;rsquo;s a compliment.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Pull requests for a typo fix should be resolved in 1&amp;ndash;2 weeks. Same for simple bug fixes.&lt;/p&gt;

&lt;p&gt;Pull requests implementing a new feature should be resolved in a few months. Pull requests changing an existing feature may take longer.&lt;/p&gt;

&lt;p&gt;Pull requests that implement a backwards-incompatible change to an existing  feature are unlikely to be merged until &lt;a href="https://github.com/racket/racket/wiki/Racket2"&gt;Racket2&lt;/a&gt;.&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">Racket v6.10.1</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/09/racket-v6-10-1.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-09-racket-v6-10-1-html</id>
  <published>2017-09-12T08:30:01Z</published>
  <updated>2017-09-12T08:30:01Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Vincent St-Amour&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racket version 6.10.1 is now available from &lt;a href="http://racket-lang.org/"&gt;http://racket-lang.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Version 6.10.1 patches the recent v6.10 release in three small ways:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;On Linux, corrects a mishandling of file-stream ports that can block on input or output (such as pipes between processes), where closing a blocked port may cause a port that&amp;rsquo;s opened later to be incorrectly reported as blocked.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;On Windows, corrects a crash in the handling of symbolic links.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;On all platforms, corrects the peer-side results from &lt;code&gt;tcp-addresses&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">Racket v6.10</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/07/racket-v6-10.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-07-racket-v6-10-html</id>
  <published>2017-07-31T05:20:44Z</published>
  <updated>2017-07-31T05:20:44Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Vincent St-Amour&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racket version 6.10 is now available from &lt;a href="http://racket-lang.org/"&gt;http://racket-lang.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: Graphical Racket programs such as DrRacket are affected by a bug in the Windows 10 Creators update which can lead to blue screens and require reboots. We are aware of the issue, and have mitigated it in DrRacket, which reduces the incidence of crashes. Microsoft has diagnosed the issue and will release a fix in a future Windows update. Additional details are available here:  &lt;a href="https://github.com/racket/racket/issues/1671"&gt;https://github.com/racket/racket/issues/1671&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;Internally, Racket&amp;rsquo;s intermediate compatibility layer over operating-system facilities has been moved into its own library, &amp;ldquo;rktio&amp;rdquo;, so it can be used in future Racket implementations. This change should be transparent, but the refactoring moves code that has many compiler and OS dependencies, so we expect a new glitch or two in less-common build and execution environments. Please report problems at &lt;a href="https://github.com/racket/racket/issues"&gt;https://github.com/racket/racket/issues&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Racket supports cross-compilation of executables in more cases, including executables that depend on packages for foreign libraries.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;struct&lt;/code&gt; form supports an &lt;code&gt;#:authentic&lt;/code&gt; annotation to declare that chaperones and impersonators are never allowed on instances of the declared structure type. This annotation is intended for use on a library&amp;rsquo;s internal data structures, where it won&amp;rsquo;t interfere with contracts or other forms of extension at a library&amp;rsquo;s interface. It can sometimes provide a small performance boost.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;RackUnit adds &lt;code&gt;nested-info&lt;/code&gt; and &lt;code&gt;string-info&lt;/code&gt; to grant custom checks more control over the display and layout of check failure info.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;raco test&lt;/code&gt; command provides the &lt;code&gt;++arg&lt;/code&gt; and &lt;code&gt;++args&lt;/code&gt; flags to pass arguments to tested programs.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket has types for immutable, mutable, and weak hashtables; in other words the type &lt;code&gt;(HashTable K V)&lt;/code&gt; is a union &lt;code&gt;(U (Immutable-HashTable K V) (Mutable-HashTable K V) (Weak-HashTable K V))&lt;/code&gt;. Standard library functions may have more specific return types. For example, &lt;code&gt;hash-set&lt;/code&gt; has type &lt;code&gt;(-&amp;gt; (HashTable K V) K V (Immutable-HashTable K V))&lt;/code&gt;. When an immutable hashtable flows from untyped code to typed code, Typed Racket may use a flat contract to verify its type (provided the table&amp;rsquo;s key and value types are flat).&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The Typed Racket Optimizer is disabled in untrusted contexts (e.g., sandboxes). This prevents unsoundness in the Typed Racket type system from being used to get access to unsafe operations.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Racket&amp;rsquo;s internal runtime adds a &lt;code&gt;scheme_atexit&lt;/code&gt; procedure with identical behavior as &lt;code&gt;atexit&lt;/code&gt; defined in libc.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;The following people contributed to this release: Alex Knauth, Alexander McLin, Alexis King, Andrew Kent, Ben Greenman, Ben Noordhuis, Carlo Dapor, Conor Finegan, Daniel Feltey, Ethan Estrada, Georges Dup√©ron, Gary F. Baumgartner, Gianluca Ciccarelli, Gustavo Massaccesi, Harold Carr, Jack Firth, Jay McCarthy, John Clements, Kimball Germane, Leandro Facchinetti, Lehi Toskin, Leif Andersen, Matthew Butterick, Matthew Flatt, Matthias Felleisen, Michael Orlitzky, Milo Turner, Mohsen Keyhani, Philip McGrath, Robby Findler, Rob Bassi, Ryan Culpepper, Sam Caldwell, Sam Tobin-Hochstadt, Scott Moore, Spencer Florence, Stephen Chang, Stephen De Gabrielle, Vincent St-Amour, WarGrey Gyoudmon Ju, and William J. Bowman.&lt;/p&gt;

&lt;p&gt;Feedback Welcome&lt;/p&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">Racket v6.9</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/04/racket-v6-9.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-04-racket-v6-9-html</id>
  <published>2017-04-27T03:39:35Z</published>
  <updated>2017-04-27T03:39:35Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Vincent St-Amour&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racket version 6.9 is now available from &lt;a href="http://racket-lang.org/"&gt;http://racket-lang.org/&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id="security-announcement"&gt;Security Announcement&lt;/h2&gt;

&lt;p&gt;A security vulnerability in the &lt;code&gt;racket/sandbox&lt;/code&gt; library and Typed Racket allowed malicious Typed Racket code to escape the sandbox. This vulnerability has been fixed in Racket version 6.9. Anyone using &lt;code&gt;racket/sandbox&lt;/code&gt; to execute untrustworthy code with access to Typed Racket should upgrade to version 6.9 immediately.&lt;/p&gt;

&lt;p&gt;While this known vulnerability has been eliminated, it is possible that similar errors in other installed collections could also be exploited, although we are not currently aware of any existing vulnerabilities. We recommend that if you use the Racket sandbox to execute untrustworthy Racket code, you should also employ additional operating system or virtual machine level protections. The documentation for &lt;code&gt;racket/sandbox&lt;/code&gt; has been updated to list recommended security practices for using the library.&lt;/p&gt;

&lt;p&gt;Thanks to Scott Moore for identifying this vulnerability.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;The official package catalog Web site is revised to have a new user experience.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The Northwestern snapshot site keeps weekly snapshots going up to 12 weeks into the past. Those provide a middle ground for users who want access to new features earlier than stable releases, but want less churn than nightly builds.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;DrRacket provides a refactoring tool to remove unused requires in modules.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;DrRacket&amp;rsquo;s #lang-line customization support works better with buggy (i.e., in development) languages.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The web server&amp;rsquo;s cookie libraries, including &amp;ldquo;id cookie&amp;rdquo; authentication, support RFC 6265.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;db&lt;/code&gt; library supports PostgreSQL&amp;rsquo;s UUID type.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;raco&lt;/code&gt; command lists matching commands when passed an ambiguous command prefix.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The bytecode compiler detects more optimization opportunities for structure operations.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Scribble can produce output via XeLaTeX as an alternative to LaTeX.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Scribble supports the &lt;code&gt;acmart&lt;/code&gt; LaTeX style, for use with ACM publications.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Scribble supports the use of CJK characters in tags.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;The following people contributed to this release: Alex Knauth, Alexander Shopov, Alexis King, Andrew Kent, Asumu Takikawa, Ben Greenman, Daniel Feltey, David Van Horn, Georges Dup√©ron, Greg Hendershott, Gustavo Massaccesi, Ingo Blechschmidt, James Bornholt, James Whang, Jay McCarthy, Jeff Shelley, John Clements, Jordan Johnson, Leandro Facchinetti, Leif Andersen, Marc Burns, Matthew Butterick, Matthew Eric Bassett, Matthew Flatt, Matthias Felleisen, Michael Myers, Mike Sperber, Philip McGrath, Philippe Meunier, Robby Findler, Royall Spence, Ryan Culpepper, Sam Caldwell, Sam Tobin-Hochstadt, Shu-Hung You, Spencer Florence, Stephen Chang, Tony Garnock-Jones, Vincent St-Amour, WarGrey Gyoudmon Ju, Wei Tang, and William G Hatch.&lt;/p&gt;

&lt;p&gt;Feedback Welcome&lt;/p&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">Type Tailoring</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/04/type-tailoring.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-04-type-tailoring-html</id>
  <published>2017-04-18T08:35:47Z</published>
  <updated>2017-04-18T08:35:47Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Ben Greenman&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Type tailoring is a technique for adding &lt;em&gt;domain-specific&lt;/em&gt; type checkers to a  typed host language. Using the &lt;a href="http://www.ccs.neu.edu/home/stchang/popl2017/"&gt;&lt;em&gt;Type Systems as Macros&lt;/em&gt;&lt;/a&gt; approach to building typed languages,  implementing type tailoring in Typed Racket is straightforward. Any library can apply the core idea, and you can try programming with  type tailorings by downloading the &lt;a href="https://pkgd.racket-lang.org/pkgn/package/trivial"&gt;&lt;code&gt;trivial&lt;/code&gt;&lt;/a&gt; package  (requires Racket v6.4 or later).&lt;/p&gt;
&lt;!-- more--&gt;

&lt;h2 id="background-programming-the-type-elaborator"&gt;Background: Programming the Type Elaborator&lt;/h2&gt;

&lt;p&gt;Many typed languages include both a type checker and a &lt;em&gt;type elaborator&lt;/em&gt;. The type elaborator translates source code to an &lt;a href="http://www.lfcs.inf.ed.ac.uk/reports/87/ECS-LFCS-87-42/ECS-LFCS-87-42.pdf"&gt;explicitly typed&lt;/a&gt; representation for the type checker to validate. Normally, programmers cannot extend the behavior of the type elaborator  without modifying the compiler.&lt;/p&gt;

&lt;p&gt;In &lt;a href="http://docs.racket-lang.org/ts-reference/index.html"&gt;Typed Racket&lt;/a&gt;, the Racket macro expander serves as a type elaborator. A fully-expanded Typed Racket program is valid input to the type checker. This design makes Typed Racket &lt;em&gt;macro-extensible&lt;/em&gt;; programmers can write their  own macros to &lt;a href="https://www.youtube.com/watch?v=_ahvzDzKdB0"&gt;grow&lt;/a&gt; the syntax of the language. More on this in a minute.&lt;/p&gt;

&lt;p&gt;Recently, &lt;a href="https://ccs.neu.edu/home/stchang"&gt;Stephen Chang&lt;/a&gt; observed  that individual macros can implement the same pipeline as Typed Racket &amp;mdash;  macros can expand their sub-terms and perform static checks on the results. Such macros are essentially type rules, and  a well-designed library of such macros is essentially a type system. Hence &lt;a href="http://www.ccs.neu.edu/home/stchang/popl2017/"&gt;&lt;em&gt;Type Systems as Macros&lt;/em&gt;&lt;/a&gt;: a library for building  typed, domain-specific languages (DSLs) using the Racket macro system.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Type tailoring&lt;/em&gt; is programming a language&amp;rsquo;s type elaborator to implement  &lt;em&gt;domain-specific typing rules&lt;/em&gt; on top of an existing type system. Any language that lets programmers extend the behavior of its type elaborator  supports type tailoring. In particular, Typed Racket programmers can use the  &lt;em&gt;Type Systems as Macros&lt;/em&gt; technique to implement tailored APIs as macros. These macros can statically check properties of source code, communicate  the results of their checks to other macros, and expand to type annotated  code for the Typed Racket type checker.&lt;/p&gt;

&lt;p&gt;As we will see, type tailoring can even extend a &amp;ldquo;conventional&amp;rdquo; typed language  with static checks that would otherwise require dependent types.&lt;/p&gt;

&lt;h2 id="case-study-regular-expressions"&gt;Case Study: Regular Expressions&lt;/h2&gt;

&lt;h3 id="brush-racketregexp-match-in-racket"&gt;&lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt; in Racket&lt;/h3&gt;

&lt;p&gt;Racket&amp;rsquo;s &lt;a href="http://docs.racket-lang.org/reference/regexp.html"&gt;regular expression library&lt;/a&gt;  will match a string, path, byte string, or input port  against a given pattern.&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="n"&gt;$&lt;/span&gt; &lt;span class="n"&gt;racket&lt;/span&gt;
  &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"r"&lt;/span&gt; &lt;span class="s2"&gt;"racket"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;; &amp;#39;("r")&lt;/span&gt;
  &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"z"&lt;/span&gt; &lt;span class="s2"&gt;"racket"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;; #f&lt;/span&gt;
  &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"r|z"&lt;/span&gt; &lt;span class="s2"&gt;"racket"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;; &amp;#39;("r")&lt;/span&gt;
  &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/port-lib.html#(def._((lib._racket/port..rkt)._with-input-from-string))" style="color: inherit"&gt;with-input-from-string&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"hello world"&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/lambda.html#(form._((lib._racket/private/base..rkt)._~ce~bb))" style="color: inherit"&gt;Œª&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"hello (.*)$"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/port-ops.html#(def._((quote._~23~25kernel)._current-input-port))" style="color: inherit"&gt;current-input-port&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
  &lt;span class="c1"&gt;; &amp;#39;(#"hello world" #"world")&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;br /&gt;

&lt;p&gt;The result of matching a pattern against an input source is &lt;code&gt;#f&lt;/code&gt; if  no part of the input matched the pattern. Otherwise, the result is a pair containing:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;the subsequence of the input that matched the pattern, and&lt;/li&gt;
 &lt;li&gt;a list of subsequences that were captured by parenthesized sub-patterns in  the pattern (&lt;em&gt;capture groups&lt;/em&gt;).&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Note that a capture group may fail to capture any subsequence. If this happens, the list of subsequences contains &lt;code&gt;#f&lt;/code&gt; in the  corresponding position.&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="n"&gt;$&lt;/span&gt; &lt;span class="n"&gt;racket&lt;/span&gt;
  &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"(r)|(z)"&lt;/span&gt; &lt;span class="s2"&gt;"racket"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;; &amp;#39;("r" "r" #f)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;br /&gt;

&lt;h3 id="brush-racketregexp-match-in-typed-racket"&gt;&lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt; in Typed Racket&lt;/h3&gt;

&lt;p&gt;Typed Racket includes a type signature for &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt; that accepts  the same variety of input sources, but conservatively rejects some &amp;ldquo;correct&amp;rdquo;  uses of the output.&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="n"&gt;$&lt;/span&gt; &lt;span class="n"&gt;racket&lt;/span&gt; &lt;span class="m"&gt;-I&lt;/span&gt; &lt;span class="n"&gt;typed/racket&lt;/span&gt;
  &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"(a*)b"&lt;/span&gt; &lt;span class="s2"&gt;"aaabbb"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;; - : (U False (Pairof String (Listof (U False String))))&lt;/span&gt;
  &lt;span class="c1"&gt;; &amp;#39;("aaab" "aaa")&lt;/span&gt;

  &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/let.html#(form._((lib._racket/private/letstx-scheme..rkt)._let))" style="color: inherit"&gt;let&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"(a*)b"&lt;/span&gt; &lt;span class="s2"&gt;"aaabbb"&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/when_unless.html#(form._((lib._racket/private/letstx-scheme..rkt)._when))" style="color: inherit"&gt;when&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((quote._~23~25kernel)._string-length))" style="color: inherit"&gt;string-length&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((lib._racket/list..rkt)._second))" style="color: inherit"&gt;second&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
  &lt;span class="c1"&gt;; Type Checker: Polymorphic function `second&amp;#39; could not be applied to arguments:&lt;/span&gt;
  &lt;span class="c1"&gt;;   ....&lt;/span&gt;
  &lt;span class="c1"&gt;; Arguments: (Pairof String (Listof (U False String)))&lt;/span&gt;
  &lt;span class="c1"&gt;; Expected result: String&lt;/span&gt;
  &lt;span class="c1"&gt;;   in: (second m)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;br /&gt;

&lt;p&gt;The issue is that &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((quote._~23~25kernel)._string-length))" style="color: inherit"&gt;string-length&lt;/a&gt;&lt;/code&gt; expects a string, but Typed Racket  reasons that the call to &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((lib._racket/list..rkt)._second))" style="color: inherit"&gt;second&lt;/a&gt;&lt;/code&gt; might return a string or false. One solution is to guard the value &lt;code&gt;(second m)&lt;/code&gt; with a dynamic check. Another is to apply type tailoring to &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt;!&lt;/p&gt;

&lt;h3 id="type-tailored-brush-racketregexp-match"&gt;Type Tailored &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;We can implement a type-tailored interface to &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt;  with a macro that:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;checks whether its first argument is a string literal&lt;/li&gt;
 &lt;li&gt;counts the number of matched parentheses in the string literal&lt;/li&gt;
 &lt;li&gt;expands to &lt;em&gt;code designed to convince Typed Racket&lt;/em&gt; that the result is a list  with the proper number of arguments.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;The third point is crucial, and demonstrates how type tailoring can translate  program properties that are &lt;em&gt;implicit&lt;/em&gt; in the source code to facts that  the type checker can understand.&lt;/p&gt;

&lt;p&gt;Here is the macro:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define-syntax))" style="color: inherit"&gt;define-syntax&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;smart-match&lt;/span&gt; &lt;span class="n"&gt;stx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#(form._((lib._syntax/parse..rkt)._syntax-parse))" style="color: inherit"&gt;syntax-parse&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;stx&lt;/span&gt;
   &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt).__))" style="color: inherit"&gt;_&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;pattern:str&lt;/span&gt; &lt;span class="n"&gt;other-args&lt;/span&gt; &lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt)._......))" style="color: inherit"&gt;...&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;num-groups&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count-groups&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/stxops.html#(def._((quote._~23~25kernel)._syntax-e))" style="color: inherit"&gt;syntax-e&lt;/a&gt;&lt;/span&gt; &lt;span class="o"&gt;#`&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/syntax/stxparse-specifying.html#(form._((lib._syntax/parse..rkt)._pattern))" style="color: inherit"&gt;pattern&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="o"&gt;#`&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/let.html#(form._((lib._racket/private/letstx-scheme..rkt)._let))" style="color: inherit"&gt;let&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/syntax/stxparse-specifying.html#(form._((lib._syntax/parse..rkt)._pattern))" style="color: inherit"&gt;pattern&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;other-args&lt;/span&gt; &lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt)._......))" style="color: inherit"&gt;...&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((quote._~23~25kernel)._if))" style="color: inherit"&gt;if&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((quote._~23~25kernel)._list))" style="color: inherit"&gt;list&lt;/a&gt;&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((quote._~23~25kernel)._car))" style="color: inherit"&gt;car&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;#,@&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/for.html#(form._((lib._racket/private/base..rkt)._for/list))" style="color: inherit"&gt;for/list&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/sequences.html#(def._((lib._racket/private/base..rkt)._in-range))" style="color: inherit"&gt;in-range&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;num-groups&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
                 &lt;span class="o"&gt;#`&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._or))" style="color: inherit"&gt;or&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((quote._~23~25kernel)._list-ref))" style="color: inherit"&gt;list-ref&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;#,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/exns.html#(def._((quote._~23~25kernel)._error))" style="color: inherit"&gt;error&lt;/a&gt;&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;smart-match&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
          &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
   &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt).__))" style="color: inherit"&gt;_&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt)._......))" style="color: inherit"&gt;...&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;#`&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt)._......))" style="color: inherit"&gt;...&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt).__))" style="color: inherit"&gt;_&lt;/a&gt;&lt;/span&gt;
    &lt;span class="o"&gt;#`&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;br /&gt;

&lt;blockquote&gt;
 &lt;p&gt;Scroll to the bottom of this post for an implementation of &lt;code&gt;count-groups&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Quick guide to reading the macro:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;code&gt;&lt;a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#(form._((lib._syntax/parse..rkt)._syntax-parse))" style="color: inherit"&gt;syntax-parse&lt;/a&gt;&lt;/code&gt; is a pattern-matcher, the three clauses match possible uses of &lt;code&gt;smart-match&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;tt&gt;#`&lt;/tt&gt; is a constructor for &lt;a href="http://docs.racket-lang.org/reference/syntax-model.html#%28tech._syntax._object%29"&gt;syntax objects&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;the &lt;code&gt;#,@(for/list ....)&lt;/code&gt; term escapes to Racket&amp;rsquo;s &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/for.html#(form._((lib._racket/private/base..rkt)._for/list))" style="color: inherit"&gt;for/list&lt;/a&gt;&lt;/code&gt;  combinator to build a list of syntax objects, then splices the generated  syntax into the program &amp;mdash; as if the programmer had written out a list  with &lt;code&gt;num-groups&lt;/code&gt; elements&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;And here is a &amp;ldquo;client side&amp;rdquo; use of the macro:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/let.html#(form._((lib._racket/private/letstx-scheme..rkt)._let))" style="color: inherit"&gt;let&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;smart-match&lt;/span&gt; &lt;span class="s2"&gt;"(a*)b"&lt;/span&gt; &lt;span class="s2"&gt;"aaabbb"&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/when_unless.html#(form._((lib._racket/private/letstx-scheme..rkt)._when))" style="color: inherit"&gt;when&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((quote._~23~25kernel)._string-length))" style="color: inherit"&gt;string-length&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((lib._racket/list..rkt)._second))" style="color: inherit"&gt;second&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
  &lt;span class="c1"&gt;; 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;br /&gt;

&lt;p&gt;It&amp;rsquo;s exactly the result we want, and one renaming away from the  code we want to write.&lt;/p&gt;

&lt;h3 id="improving-brush-racketsmart-match"&gt;Improving &lt;code&gt;smart-match&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Our &lt;code&gt;smart-match&lt;/code&gt; has a few obvious limitations. First, it reports an error if a capture group fails to capture a string. Second, it fails to tailor calls where the pattern is a byte string  or regular expression literal. In the cases, &lt;code&gt;smart-match&lt;/code&gt; defaults to Typed Racket&amp;rsquo;s  &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt;. Third, it fails to tailor calls where the pattern is a variable.&lt;/p&gt;

&lt;p&gt;The first problem is easy to fix by changing &lt;code&gt;count-groups&lt;/code&gt; to return  a list of &lt;code&gt;num-groups&lt;/code&gt; booleans encoding whether each capture group  definitely or maybe captures a string when the overall match is successful. The second problem is also just a matter of engineering.&lt;/p&gt;

&lt;p&gt;For the third problem, we can use the &lt;em&gt;Type Systems as Macros&lt;/em&gt; technique  of using the macro expander to replace bound occurrences of a variable  with type-annotated variables. The domain-specific type we attach describes the capture groups; for example,  given the variable declaration:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="sr"&gt;#rx"([a-z]+)@gmail\\.com"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;br /&gt;

&lt;p&gt; the type annotation is &lt;code&gt;'(#t)&lt;/code&gt; because it contains one capture group  that is certain to capture a string when used in a successful  &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt;. This annotation can be attached to occurrences of &lt;code&gt;x&lt;/code&gt; at expansion-time  as a &lt;a href="http://docs.racket-lang.org/reference/stxprops.html#%28tech._syntax._property%29"&gt;syntax property&lt;/a&gt;  for &lt;code&gt;smart-match&lt;/code&gt; to extract.&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt; The &lt;a href="http://docs.racket-lang.org/trivial/index.html"&gt;&lt;code&gt;trivial&lt;/code&gt;&lt;/a&gt; package includes a tailored  &lt;a href="http://docs.racket-lang.org/trivial/index.html#%28def._%28%28lib._trivial%2Fregexp..rkt%29._regexp-match%29%29"&gt;&lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt;&lt;/a&gt;  that addresses all three issues.  Note: the fix for the third issue changes the expansion-time meaning of &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/code&gt;  to infer and propagate domain-specific types.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3 id="practical-benefits"&gt;Practical Benefits&lt;/h3&gt;

&lt;p&gt;Now that we&amp;rsquo;ve thoroughly criticized &lt;code&gt;smart-match&lt;/code&gt;, it&amp;rsquo;s worth pointing  out its strengths.&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;code&gt;smart-match&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; re-implement regular expression matching.  It re-uses Racket&amp;rsquo;s existing, correct, and performant &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;code&gt;smart-match&lt;/code&gt; supports the existing syntax for regular expressions.&lt;/li&gt;
 &lt;li&gt;&lt;code&gt;smart-match&lt;/code&gt; validates some programs that Typed Racket conservatively  rejects.&lt;/li&gt;
 &lt;li&gt;&lt;code&gt;smart-match&lt;/code&gt; rejects some programs that Typed Racket would accept,  yet evaluate to runtime errors &amp;mdash; for instance, &lt;code&gt;(second (regexp-match "r" "racket"))&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Lastly, the use of &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((quote._~23~25kernel)._list-ref))" style="color: inherit"&gt;list-ref&lt;/a&gt;&lt;/code&gt; exploits its conservative type to improve  the conservative type of &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt;. Whether you find this use clever or brittle, it is a proof to Typed Racket that  does not resort to type casts.&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;Implementing general &lt;em&gt;type checker plugins&lt;/em&gt; that can convince the host  type system of their correctness is a hard problem. I know of three high-quality type checker plugins for Haskell, and all three  assert their correctness to GHC  (&lt;a href="https://github.com/yav/type-nat-solver"&gt;&lt;code&gt;type-nat-solver&lt;/code&gt;&lt;/a&gt;,  &lt;a href="https://github.com/christiaanb/ghc-typelits-natnormalise"&gt;&lt;code&gt;natnormalize&lt;/code&gt;&lt;/a&gt;, and  &lt;a href="https://github.com/adamgundry/uom-plugin"&gt;&lt;code&gt;uom-plugin&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 id="comparison-dependently-typed-haskell"&gt;Comparison: Dependently Typed Haskell&lt;/h2&gt;

&lt;p&gt;At this year&amp;rsquo;s POPL, &lt;a href="http://www.cis.upenn.edu/~sweirich"&gt;Stephanie Weirich&lt;/a&gt; gave a keynote about &lt;a href="http://www.cis.upenn.edu/~sweirich/talks/popl17.pdf"&gt;&lt;em&gt;The Influence of Dependent Types&lt;/em&gt;&lt;/a&gt; on the Haskell type system. After a brief introduction, her fifth slide gave motivation for dependently  typed Haskell: &lt;em&gt;domain-specific type checkers&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="/img/why-dependent-haskell.png" alt="Why Dependent Haskell? Domain-specific type checkers" border="4" style="width: 40%" /&gt;&lt;/p&gt;

&lt;p&gt;The rest of the talk was a code walk of a  &lt;a href="https://github.com/sweirich/dth/tree/master/popl17"&gt;dependently typed regular expression matcher&lt;/a&gt;! Stephanie&amp;rsquo;s regular expression syntax supports Python-style named capture groups, and a successful match returns a record with group names as keys. These keys are reflected in the return type. Of course the point of the talk was not regular expressions, but rather  how some impressive GHC plugins compose to solve a practical problem.&lt;/p&gt;

&lt;p&gt;What I want to point out, however, is that if the goal is &amp;ldquo;domain-specific  type checkers&amp;rdquo;, type tailoring is a more direct solution. So if you are a programmer using Haskell or OCaml or Racket or Scala or  Clojure or Java or any other language with a decent syntax extension system,  you don&amp;rsquo;t need to wait for &amp;ldquo;dependently typed &lt;code&gt;X&lt;/code&gt;&amp;rdquo; to add more static checking  to your library. Write a macro!&lt;/p&gt;

&lt;h2 id="more-type-tailoring"&gt;More Type Tailoring&lt;/h2&gt;

&lt;p&gt;There is a full implementation of type-tailored &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt; on the  &lt;a href="https://pkgd.racket-lang.org"&gt;Racket package server&lt;/a&gt;. Try it out by installing the &lt;a href="https://pkgd.racket-lang.org/pkgn/package/trivial"&gt;trivial-pkg&lt;/a&gt; package:&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;    $ raco pkg install trivial
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;br /&gt;

&lt;p&gt;The package also includes tailorings for:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href="http://docs.racket-lang.org/trivial/index.html#%28part._.Format_.Strings%29"&gt;format strings&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;fixed-length &lt;a href="http://docs.racket-lang.org/trivial/index.html#%28part._.List_.Operations%29"&gt;lists&lt;/a&gt; and &lt;a href="http://docs.racket-lang.org/trivial/index.html#%28part._.Vector_.Operations%29"&gt;vectors&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://docs.racket-lang.org/trivial/index.html#%28part._.Functions%29"&gt;&lt;em&gt;N&lt;/em&gt;-ary functions&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://docs.racket-lang.org/trivial/index.html#%28part._.Integer_.Arithmetic%29"&gt;constant-folding arithmetic&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;as well as syntax for defining new tailorings.&lt;/p&gt;

&lt;p&gt;For further reading on type tailoring, and a sketch of how to prove the  soundness of a tailoring, we have a draft paper:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href="http://www.ccs.neu.edu/home/types/resources/type-tailoring.pdf"&gt;&lt;code&gt;http://www.ccs.neu.edu/home/types/resources/type-tailoring.pdf&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;The draft also reports on a small evaluation of our tailored  &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt; on existing code. We searched the Racket distribution and libraries for uses of &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt;  and found over 300 in untyped code. We then converted these uses to Typed Racket. After converting, most uses did not compile using Typed Racket&amp;rsquo;s &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt;,  but swapping in the tailored &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match))" style="color: inherit"&gt;regexp-match&lt;/a&gt;&lt;/code&gt; (a 1-line change) removed  the type errors in over 250 cases.&lt;/p&gt;

&lt;h3 id="appendix-brush-racketcount-groups"&gt;Appendix: &lt;code&gt;count-groups&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Here is a simple implementation for &lt;code&gt;count-groups&lt;/code&gt;. &lt;a href="http://docs.racket-lang.org/trivial/index.html#%28part._.Integer_.Arithmetic%29"&gt;This file&lt;/a&gt; contains a more robust implementation (look for &lt;code&gt;parse-groups&lt;/code&gt;).&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define-for-syntax))" style="color: inherit"&gt;define-for-syntax&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count-groups&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;last-open-paren&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/boxes.html#(def._((quote._~23~25kernel)._box))" style="color: inherit"&gt;box&lt;/a&gt;&lt;/span&gt; &lt;span class="no"&gt;#f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;num-groups&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/for.html#(form._((lib._racket/private/base..rkt)._for/fold))" style="color: inherit"&gt;for/fold&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;num-groups&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
              &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/sequences.html#(def._((lib._racket/private/base..rkt)._in-string))" style="color: inherit"&gt;in-string&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
               &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/sequences.html#(def._((lib._racket/private/base..rkt)._in-naturals))" style="color: inherit"&gt;in-naturals&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/case.html#(form._((lib._racket/private/more-scheme..rkt)._case))" style="color: inherit"&gt;case&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
       &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="sc"&gt;#\(&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/boxes.html#(def._((quote._~23~25kernel)._set-box!))" style="color: inherit"&gt;set-box!&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;last-open-paren&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;num-groups&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
       &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="sc"&gt;#\)&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((quote._~23~25kernel)._if))" style="color: inherit"&gt;if&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/boxes.html#(def._((quote._~23~25kernel)._unbox))" style="color: inherit"&gt;unbox&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;last-open-paren&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/begin.html#(form._((quote._~23~25kernel)._begin))" style="color: inherit"&gt;begin&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/boxes.html#(def._((quote._~23~25kernel)._set-box!))" style="color: inherit"&gt;set-box!&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;last-open-paren&lt;/span&gt; &lt;span class="no"&gt;#f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;num-groups&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/exns.html#(def._((quote._~23~25kernel)._error))" style="color: inherit"&gt;error&lt;/a&gt;&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;smart-match&lt;/span&gt; &lt;span class="s2"&gt;"unmatched ')' at position &lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((lib._racket/format..rkt)._~7ea))" style="color: inherit"&gt;~a&lt;/a&gt; in '~a'"&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
       &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((lib._racket/private/letstx-scheme..rkt)._else))" style="color: inherit"&gt;else&lt;/a&gt;&lt;/span&gt;
        &lt;span class="n"&gt;num-groups&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((quote._~23~25kernel)._if))" style="color: inherit"&gt;if&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/boxes.html#(def._((quote._~23~25kernel)._unbox))" style="color: inherit"&gt;unbox&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;last-open-paren&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/exns.html#(def._((quote._~23~25kernel)._error))" style="color: inherit"&gt;error&lt;/a&gt;&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;smart-match&lt;/span&gt; &lt;span class="s2"&gt;"unmatched '(' at position &lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((lib._racket/format..rkt)._~7ea))" style="color: inherit"&gt;~a&lt;/a&gt; in '~a'"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/boxes.html#(def._((quote._~23~25kernel)._unbox))" style="color: inherit"&gt;unbox&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;last-open-paren&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;num-groups&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;br /&gt;</content></entry>
 <entry>
  <title type="text">Languages as Dotfiles</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/03/languages-as-dotfiles.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-03-languages-as-dotfiles-html</id>
  <published>2017-03-03T05:18:04Z</published>
  <updated>2017-03-03T05:18:04Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Leif Andersen and Ben Greenman&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Tired of writing &lt;code&gt;(require (for-syntax syntax/parse))&lt;/code&gt; at the top of your Racket programs? This post shows how to make a &lt;code&gt;#lang&lt;/code&gt; to customize your default programming environment.&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;Let&amp;rsquo;s build a language &lt;code&gt;#lang scratch&lt;/code&gt; that:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;loads the &lt;a href="http://docs.racket-lang.org/reference/index.html"&gt;&lt;code&gt;racket/base&lt;/code&gt;&lt;/a&gt;,  &lt;a href="http://docs.racket-lang.org/reference/strings.html#%28mod-path._racket%2Fformat%29"&gt;&lt;code&gt;racket/format&lt;/code&gt;&lt;/a&gt;,  &lt;a href="http://docs.racket-lang.org/reference/pairs.html#%28mod-path._racket%2Flist%29"&gt;&lt;code&gt;racket/list&lt;/code&gt;&lt;/a&gt;, and  &lt;a href="http://docs.racket-lang.org/syntax/stxparse.html"&gt;&lt;code&gt;syntax/parse&lt;/code&gt;&lt;/a&gt;  (at &lt;a href="http://docs.racket-lang.org/guide/phases.html"&gt;phase 1&lt;/a&gt;)  libraries; and&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;enables Scribble&amp;rsquo;s &lt;a href="http://docs.racket-lang.org/scribble/reader.html"&gt;@-syntax&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;We&amp;rsquo;ll follow a three-step recipe:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;
  &lt;p&gt;build an empty &lt;code&gt;scratch&lt;/code&gt; library,&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;load the libraries, and&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;change the reader.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;At the end, we&amp;rsquo;ll see how to make &lt;code&gt;scratch&lt;/code&gt; your default language in DrRacket.&lt;/p&gt;

&lt;h2 id="getting-started"&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;First we need to make a &lt;code&gt;scratch/&lt;/code&gt; directory with &lt;code&gt;info.rkt&lt;/code&gt; and &lt;code&gt;main.rkt&lt;/code&gt; files:&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir scratch&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; scratch
$ touch info.rkt
$ touch main.rkt
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Inside the &lt;code&gt;info.rkt&lt;/code&gt; file, write:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;info&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;"scratch"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;deps&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"base"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/runtime.html#(def._((quote._~23~25kernel)._version))" style="color: inherit"&gt;version&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Inside the &lt;code&gt;main.rkt&lt;/code&gt; file, write:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;racket/base&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Now from inside the &lt;code&gt;scratch/&lt;/code&gt; directory, install the package:&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ raco pkg install
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;You are now the proud parent of a new Racket package.&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;&lt;a href="http://docs.racket-lang.org/pkg/cmdline.html#%28part._raco-pkg-new%29"&gt;raco-pkg-new&lt;/a&gt; is a shortcut for starting a new package.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
 &lt;p&gt;For more information on the &lt;code&gt;info.rkt&lt;/code&gt; file format, see the &lt;a href="http://docs.racket-lang.org/raco/info_rkt.html"&gt;&lt;code&gt;raco&lt;/code&gt;&lt;/a&gt; documentation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 id="combining-libraries"&gt;Combining Libraries&lt;/h2&gt;

&lt;p&gt;Any program can now &lt;code&gt;(require scratch)&lt;/code&gt; to import all bindings provided by the &lt;code&gt;main.rkt&lt;/code&gt; file. Our next step is to reprovide bindings from other libraries in &lt;code&gt;main.rkt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since we want to use &lt;code&gt;scratch&lt;/code&gt; as a language, we also need to specify how to &lt;a href="http://docs.racket-lang.org/reference/Reading.html#%28def._%28%28quote._~23~25kernel%29._read%29%29"&gt;read&lt;/a&gt; a &lt;code&gt;scratch&lt;/code&gt; program. The &lt;a href="http://docs.racket-lang.org/syntax/reader-helpers.html#%28mod-path._syntax%2Fmodule-reader%29"&gt;&lt;code&gt;syntax/module-reader&lt;/code&gt;&lt;/a&gt; language provides a shorthand for doing so.&lt;/p&gt;

&lt;p&gt;Here is the updated &lt;code&gt;main.rkt&lt;/code&gt; file:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;racket/base&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;racket/format&lt;/span&gt; &lt;span class="n"&gt;racket/list&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._for-syntax))" style="color: inherit"&gt;for-syntax&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;racket/base&lt;/span&gt; &lt;span class="n"&gt;syntax/parse&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._provide))" style="color: inherit"&gt;provide&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._all-from-out))" style="color: inherit"&gt;all-from-out&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;racket/base&lt;/span&gt; &lt;span class="n"&gt;racket/format&lt;/span&gt; &lt;span class="n"&gt;racket/list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._for-syntax))" style="color: inherit"&gt;for-syntax&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._all-from-out))" style="color: inherit"&gt;all-from-out&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;racket/base&lt;/span&gt; &lt;span class="n"&gt;syntax/parse&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/module.html#(form._((quote._~23~25kernel)._module*))" style="color: inherit"&gt;module*&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="n"&gt;syntax/module-reader&lt;/span&gt;
  &lt;span class="n"&gt;scratch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._provide))" style="color: inherit"&gt;provide&lt;/a&gt;&lt;/code&gt; form declares the exports of the &lt;code&gt;scratch&lt;/code&gt; module. In other words, if another module contains the form &lt;code&gt;(require scratch)&lt;/code&gt; then that module will import bindings from &lt;code&gt;racket/base&lt;/code&gt;, &lt;code&gt;racket/format&lt;/code&gt;, &lt;code&gt;racket/list&lt;/code&gt;, and &lt;code&gt;syntax/parse&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;reader&lt;/code&gt; submodule is written in the &lt;code&gt;syntax/module-reader&lt;/code&gt; language. This submodule imports all bindings from its enclosing module (&lt;code&gt;scratch&lt;/code&gt;, or to be slightly more precise &amp;ldquo;the toplevel module in the file &lt;code&gt;scratch/main.rkt&lt;/code&gt;&amp;rdquo;) and defines a language that provides those bindings and uses the reader from &lt;code&gt;racket/base&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In short, this code does what we want.&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;scratch&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define-syntax))" style="color: inherit"&gt;define-syntax&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;did-it-work?&lt;/span&gt; &lt;span class="n"&gt;stx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#(form._((lib._syntax/parse..rkt)._syntax-parse))" style="color: inherit"&gt;syntax-parse&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;stx&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt).__))" style="color: inherit"&gt;_&lt;/a&gt;&lt;/span&gt; &lt;span class="o"&gt;#'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((lib._racket/list..rkt)._first))" style="color: inherit"&gt;first&lt;/a&gt;&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;yes&lt;/span&gt; &lt;span class="ss"&gt;it&lt;/span&gt; &lt;span class="ss"&gt;did&lt;/span&gt;&lt;span class="p"&gt;))]))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;did-it-work?&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Yes it does.&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;Annoyed that the &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._provide))" style="color: inherit"&gt;provide&lt;/a&gt;&lt;/code&gt; forms are so similar? &lt;a href="http://docs.racket-lang.org/reprovide/index.html"&gt;There&amp;rsquo;s a library for that&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 id="changing-the-reader"&gt;Changing the Reader&lt;/h2&gt;

&lt;p&gt;Next, we want to enable the &lt;a href="http://docs.racket-lang.org/scribble/reader-internals.html#%28mod-path._scribble%2Freader%29"&gt;@-expression&lt;/a&gt; reader. This involves rexporting the scribble &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/Reading.html#(def._((quote._~23~25kernel)._read))" style="color: inherit"&gt;read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/Reading.html#(def._((quote._~23~25kernel)._read-syntax))" style="color: inherit"&gt;read-syntax&lt;/a&gt;&lt;/code&gt; functions in the &lt;code&gt;reader&lt;/code&gt; submodule in &lt;code&gt;main.rkt&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;racket/base&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;racket/list&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._for-syntax))" style="color: inherit"&gt;for-syntax&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;racket/base&lt;/span&gt; &lt;span class="n"&gt;syntax/parse&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._provide))" style="color: inherit"&gt;provide&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._all-from-out))" style="color: inherit"&gt;all-from-out&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;racket/list&lt;/span&gt; &lt;span class="n"&gt;racket/base&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._for-syntax))" style="color: inherit"&gt;for-syntax&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._all-from-out))" style="color: inherit"&gt;all-from-out&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;racket/base&lt;/span&gt; &lt;span class="n"&gt;syntax/parse&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/module.html#(form._((quote._~23~25kernel)._module*))" style="color: inherit"&gt;module*&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="n"&gt;syntax/module-reader&lt;/span&gt;
  &lt;span class="n"&gt;scratch&lt;/span&gt;
  &lt;span class="kd"&gt;#:read&lt;/span&gt; &lt;span class="n"&gt;s:read&lt;/span&gt;
  &lt;span class="kd"&gt;#:read-syntax&lt;/span&gt; &lt;span class="n"&gt;s:read-syntax&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._prefix-in))" style="color: inherit"&gt;prefix-in&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;s:&lt;/span&gt; &lt;span class="n"&gt;scribble/reader&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;To test that it works, let&amp;rsquo;s embed some C syntax in our Racket program:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;scratch&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define-syntax))" style="color: inherit"&gt;define-syntax&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;did-it-work?&lt;/span&gt; &lt;span class="n"&gt;stx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;&lt;a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#(form._((lib._syntax/parse..rkt)._syntax-parse))" style="color: inherit"&gt;syntax-parse&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;stx&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt).__))" style="color: inherit"&gt;_&lt;/a&gt;&lt;/span&gt; &lt;span class="o"&gt;#'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((lib._racket/list..rkt)._first))" style="color: inherit"&gt;first&lt;/a&gt;&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;yes&lt;/span&gt; &lt;span class="ss"&gt;it&lt;/span&gt; &lt;span class="ss"&gt;did&lt;/span&gt;&lt;span class="p"&gt;))]))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;did-it-work?&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;@~a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;blockquote&gt;
 &lt;p&gt;At this point, running &lt;code class="brush: bash"&gt;$ raco setup --check-pkg-deps scratch&lt;/code&gt; will report an undeclared dependency on &lt;a href="http://docs.racket-lang.org/scribble/reader-internals.html#%28mod-path._at-exp%29"&gt;&lt;code&gt;at-exp-lib&lt;/code&gt;&lt;/a&gt;. Make sure to add &lt;code&gt;at-exp-lib&lt;/code&gt; to the &lt;code&gt;deps&lt;/code&gt; list in your &lt;code&gt;info.rkt&lt;/code&gt; file, or run &lt;code class="brush: bash"&gt;$ raco setup --fix-pkg-deps scratch&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
 &lt;p&gt;Using &lt;a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._prefix-in%29%29"&gt;&lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._prefix-in))" style="color: inherit"&gt;prefix-in&lt;/a&gt;&lt;/code&gt;&lt;/a&gt; is not necessary; it just clarifies where &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/Reading.html#(def._((quote._~23~25kernel)._read))" style="color: inherit"&gt;read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/Reading.html#(def._((quote._~23~25kernel)._read-syntax))" style="color: inherit"&gt;read-syntax&lt;/a&gt;&lt;/code&gt; come from.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
 &lt;p&gt;If you think inline C &lt;em&gt;strings&lt;/em&gt; are interesting, you should definitely watch Jay McCarthy&amp;rsquo;s RacketCon 2016 &lt;a href="https://www.youtube.com/watch?v=r1kE3R26dK0"&gt;talk&lt;/a&gt; on &lt;a href="https://github.com/jeapostrophe/remix"&gt;remix&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 id="drrackets-automatic-brush-racketlang-line"&gt;DrRacket&amp;rsquo;s Automatic &lt;code&gt;#lang&lt;/code&gt; Line&lt;/h2&gt;

&lt;p&gt;To make &lt;code&gt;scratch&lt;/code&gt; the default language for new files in DrRacket:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;
  &lt;p&gt;Click &amp;ldquo;Language&amp;rdquo; in the menu bar.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Click &amp;ldquo;Choose Language&amp;rdquo; in the drop-down menu.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Click the radio button for &amp;ldquo;The Racket Language&amp;rdquo;, then click the &amp;ldquo;Show Details&amp;rdquo; button at the bottom of the window.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Type &lt;code&gt;#lang scratch&lt;/code&gt; in the text box labeled &amp;ldquo;Automatic &lt;code&gt;#lang&lt;/code&gt; line&amp;rdquo;.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;Click &amp;ldquo;Ok&amp;rdquo;, and that&amp;rsquo;s the end. Enjoy.&lt;/p&gt;

&lt;h2 id="the-end"&gt;The End&lt;/h2&gt;

&lt;p&gt;You can and should engineer the &lt;code&gt;#lang&lt;/code&gt; line of your Racket programs to remove unnecessary boilerplate and/or enforce a project-specific development environment.&lt;/p&gt;

&lt;p&gt;Notes:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;Feel free to pubish your custom language on the Racket  &lt;a href="https://pkgn.racket-lang.org"&gt;package server&lt;/a&gt;.  (Make sure to run &lt;code class="brush: bash"&gt;$ raco setup --check-pkg-deps scratch&lt;/code&gt; beforehand.)&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Our personal &amp;ldquo;dotfiles&amp;rdquo; are  &lt;a href="https://github.com/LeifAndersen/racket-scratch"&gt;racket-scratch&lt;/a&gt;  and &lt;a href="https://github.com/bennn/agile"&gt;agile&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The title &amp;ldquo;Languages as Dotfiles&amp;rdquo; is a reference to  &lt;a href="/2011/03/languages-as-libraries-pldi-2011.html"&gt;Languages as Libraries&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</content></entry>
 <entry>
  <title type="text">On Application</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/02/on-application.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-02-on-application-html</id>
  <published>2017-02-05T07:17:41Z</published>
  <updated>2017-02-05T07:17:41Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Jack Firth&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Today I wanted to write about function application. Specifically, how to redefine and customize application with Racket. We&amp;rsquo;ll also look at some Racket packages that define interesting and useful forms of function application.&lt;/p&gt;

&lt;h2 id="the-theory"&gt;The theory&lt;/h2&gt;

&lt;p&gt;Application is the process of combining a function and arguments to evaluate a result. Application defines one half of &lt;em&gt;lambda calculus&lt;/em&gt;, the formal model underlying much of modern functional programming. The other half is &lt;em&gt;abstraction&lt;/em&gt;, which is creating new functions. Creating and applying functions is the heart of Racket and many other functional languages.&lt;/p&gt;

&lt;p&gt;So how are functions applied in Racket? What makes &lt;code&gt;(if (&amp;lt; 5 10) 'foo 'bar)&lt;/code&gt; a macro use and &lt;code&gt;(&amp;lt; 5 10)&lt;/code&gt; a function use?&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s actually a trick question, because function application &lt;em&gt;is&lt;/em&gt; a macro in Racket. During &lt;a href="http://docs.racket-lang.org/reference/syntax-model.html#%28part._expand-steps%29"&gt;macro expansion&lt;/a&gt;, the Racket expander inspects the first element of an expression to determine if it has a binding to a macro. If it doesn&amp;rsquo;t, rather than assume the expression is a function application, the expander inserts an &lt;em&gt;artificial&lt;/em&gt; identifier named &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/application.html#(form._((lib._racket/private/base..rkt)._~23~25app))" style="color: inherit"&gt;#%app&lt;/a&gt;&lt;/code&gt; into the expression. So in the above example, the expression &lt;code&gt;(&amp;lt; 5 10)&lt;/code&gt; is converted to &lt;code&gt;(#%app &amp;lt; 5 10)&lt;/code&gt;. This &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/application.html#(form._((lib._racket/private/base..rkt)._~23~25app))" style="color: inherit"&gt;#%app&lt;/a&gt;&lt;/code&gt; identifier doesn&amp;rsquo;t refer to a single specific &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/application.html#(form._((lib._racket/private/base..rkt)._~23~25app))" style="color: inherit"&gt;#%app&lt;/a&gt;&lt;/code&gt; like the &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((quote._~23~25kernel)._if))" style="color: inherit"&gt;if&lt;/a&gt;&lt;/code&gt; refers to &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/if.html#(form._((quote._~23~25kernel)._if))" style="color: inherit"&gt;if&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;racket/base&lt;/code&gt;, rather it refers to whatever the enclosing environment defines &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/application.html#(form._((lib._racket/private/base..rkt)._~23~25app))" style="color: inherit"&gt;#%app&lt;/a&gt;&lt;/code&gt; to be (which by default means ordinary function application from &lt;code&gt;racket/base&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;However, imported modules can provide their own definitions of function application by providing an &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/application.html#(form._((lib._racket/private/base..rkt)._~23~25app))" style="color: inherit"&gt;#%app&lt;/a&gt;&lt;/code&gt; macro. Let&amp;rsquo;s define our own &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/application.html#(form._((lib._racket/private/base..rkt)._~23~25app))" style="color: inherit"&gt;#%app&lt;/a&gt;&lt;/code&gt; that, in addition to applying a function, prints out a trace message. First let&amp;rsquo;s define a helper function to implement the tracing:&lt;/p&gt;
&lt;!-- more--&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;racket&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trace&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/Writing.html#(def._((quote._~23~25kernel)._printf))" style="color: inherit"&gt;printf&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"Applying &lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((lib._racket/format..rkt)._~7ev))" style="color: inherit"&gt;~v&lt;/a&gt; to arguments &lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((lib._racket/format..rkt)._~7ev))" style="color: inherit"&gt;~v&lt;/a&gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/procedures.html#(def._((lib._racket/private/base..rkt)._apply))" style="color: inherit"&gt;apply&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;We use &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((lib._racket/format..rkt)._~7ev))" style="color: inherit"&gt;~v&lt;/a&gt;&lt;/code&gt; to more clearly see the difference between strings, symbols, and numbers. Now, we can write a macro to insert a call to our function wherever we use the macro:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;racket&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/misc..rkt)._define-syntax-rule))" style="color: inherit"&gt;define-syntax-rule&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trace-app&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt)._......))" style="color: inherit"&gt;...&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trace&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt)._......))" style="color: inherit"&gt;...&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;This macro is very simple, and on it&amp;rsquo;s own isn&amp;rsquo;t really useful at all (we could just call &lt;code&gt;trace&lt;/code&gt; directly). However, we can provide this macro with the name &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/application.html#(form._((lib._racket/private/base..rkt)._~23~25app))" style="color: inherit"&gt;#%app&lt;/a&gt;&lt;/code&gt; to trigger the automatic use of &lt;code&gt;trace-app&lt;/code&gt; whenever a function call is written. We&amp;rsquo;ll move our &lt;code&gt;trace&lt;/code&gt; and &lt;code&gt;trace-app&lt;/code&gt; definitions into a submodule to see this in action without multiple files:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;racket&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/module.html#(form._((quote._~23~25kernel)._module))" style="color: inherit"&gt;module&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;trace&lt;/span&gt; &lt;span class="n"&gt;racket&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" style="color: inherit"&gt;define&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trace&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/Writing.html#(def._((quote._~23~25kernel)._printf))" style="color: inherit"&gt;printf&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"Applying &lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((lib._racket/format..rkt)._~7ev))" style="color: inherit"&gt;~v&lt;/a&gt; to arguments &lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((lib._racket/format..rkt)._~7ev))" style="color: inherit"&gt;~v&lt;/a&gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/procedures.html#(def._((lib._racket/private/base..rkt)._apply))" style="color: inherit"&gt;apply&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/misc..rkt)._define-syntax-rule))" style="color: inherit"&gt;define-syntax-rule&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trace-app&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt)._......))" style="color: inherit"&gt;...&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trace&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt)._......))" style="color: inherit"&gt;...&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._provide))" style="color: inherit"&gt;provide&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._rename-out))" style="color: inherit"&gt;rename-out&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;trace-app&lt;/span&gt; &lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/application.html#(form._((lib._racket/private/base..rkt)._~23~25app))" style="color: inherit"&gt;#%app&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Now, with a simple &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/code&gt; statement and these seven lines of code, we can trace the order of evaluation of all expressions in a Racket module.&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;trace&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._+))" style="color: inherit"&gt;+&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((quote._~23~25kernel)._string-length))" style="color: inherit"&gt;string-length&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"racket"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((quote._~23~25kernel)._string-length))" style="color: inherit"&gt;string-length&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"application"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;Applying&lt;/span&gt; &lt;span class="n"&gt;#&amp;lt;procedure:string-length&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"racket"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Applying&lt;/span&gt; &lt;span class="n"&gt;#&amp;lt;procedure:string-length&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"application"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Applying&lt;/span&gt; &lt;span class="n"&gt;#&amp;lt;procedure:+&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;17&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;h2 id="the-practice"&gt;The practice&lt;/h2&gt;

&lt;p&gt;Redefinition of &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/application.html#(form._((lib._racket/private/base..rkt)._~23~25app))" style="color: inherit"&gt;#%app&lt;/a&gt;&lt;/code&gt; is occasionally used when defining new languages, but a much more pedestrian use is to add some notational shorthand to make certain constructs more convenient. For example, consider the &lt;a href="https://github.com/samth/fancy-app"&gt;&lt;code&gt;fancy-app&lt;/code&gt;&lt;/a&gt; package. This package provides an &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/application.html#(form._((lib._racket/private/base..rkt)._~23~25app))" style="color: inherit"&gt;#%app&lt;/a&gt;&lt;/code&gt; macro that behaves just like normal function application &lt;em&gt;unless&lt;/em&gt; one or more underscores are used. In that case, the function application is converted to a lambda that takes as input one argument for each underscore. For example, &lt;code&gt;(format "Hello ~a" _)&lt;/code&gt; is equivalent to &lt;code&gt;(lambda (v) (format "Hello ~a" v))&lt;/code&gt;. This is especially useful for whipping up quick lambdas as arguments to functions like &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/require.html#(form._((lib._racket/private/base..rkt)._require))" style="color: inherit"&gt;require&lt;/a&gt;&lt;/span&gt; &lt;span class="n"&gt;fancy-app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/generic-numbers.html#(def._((quote._~23~25kernel)._~3e))" style="color: inherit"&gt;&amp;gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((lib._racket/private/map..rkt)._map))" style="color: inherit"&gt;map&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/Writing.html#(def._((quote._~23~25kernel)._format))" style="color: inherit"&gt;format&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"Hello ~a, how are you today?"&lt;/span&gt; &lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/stxcase-scheme..rkt).__))" style="color: inherit"&gt;_&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((quote._~23~25kernel)._list))" style="color: inherit"&gt;list&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"Alice"&lt;/span&gt; &lt;span class="s2"&gt;"Bob"&lt;/span&gt; &lt;span class="s2"&gt;"Eve"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Hello Alice, how are you today?"&lt;/span&gt;
  &lt;span class="s2"&gt;"Hello Bob, how are you today?"&lt;/span&gt;
  &lt;span class="s2"&gt;"Hello Eve, how are you today?"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;rackjure&lt;/code&gt; package redefines &lt;code&gt;#%app&lt;/code&gt; to make working with nested dictionaries easier. Dictionaries can be used to get and set values for keys when used as procedures, and when dictionaries are the &lt;em&gt;second&lt;/em&gt; value of a function application the first value is interpreted as a key and the dictionary&amp;rsquo;s associated value is looked up. See &lt;a href="http://docs.racket-lang.org/rackjure/index.html#%28part._dict-app%29"&gt;the &lt;code&gt;rackjure&lt;/code&gt; documentation&lt;/a&gt; for details.&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">Racket v6.8</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/01/racket-v6-8.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-01-racket-v6-8-html</id>
  <published>2017-01-24T06:53:02Z</published>
  <updated>2017-01-24T06:53:02Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Vincent St-Amour&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racket version 6.8 is now available from &lt;a href="http://racket-lang.org/"&gt;http://racket-lang.org/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;Racket sports a new logo, courtesy of Matthew Butterick.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;MacBook Pro laptops with touch bars are supported.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Support for FreeBSD on PowerPC.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Initial support for GTK3 on Wayland is available. GL contexts, GC blits, and dialog placement currently do not work.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The macro stepper provides a command-line interface via the &lt;code&gt;raco macro-stepper&lt;/code&gt; command.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket more efficiently represents and computes types and propositions, resulting in faster type checking for many programs. For more details, see &lt;a href="https://pnwamk.github.io/blog/2017/01/08/some-changes-in-typed-racket-v6-8/"&gt;this blog post by Andrew Kent&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The bytecode optimizer can reduce more expressions of the form &lt;code&gt;(equal? x y)&lt;/code&gt; to &lt;code&gt;(eqv? x y)&lt;/code&gt; or &lt;code&gt;(eq? x y)&lt;/code&gt; when the type of &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is known.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The bytecode optimizer avoids dropping stack frames in some reductions. This provides better stack traces for errors when errotrace is enabled.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The bytecode compiler detects more optimization opportunities, including when variables always hold a boolean value. In particular in expressions like &lt;code&gt;(or (symbol? x) (something))&lt;/code&gt;, the optimizations avoid the creation of an intermediate variable to store the result of &lt;code&gt;(symbol? x)&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;syntax&lt;/code&gt; form preserves syntax properties on all template pieces.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;scribble/html/extra&lt;/code&gt; module provides renderers for HTML elements that are part of the WHATWG HTML standard but not part of the &lt;code&gt;scribble/html&lt;/code&gt; language by default (e.g., &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;video&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The DeinProgramm teaching languages support pattern matching using the &lt;code&gt;match&lt;/code&gt; form.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;In the DeinProgramm languages, &lt;code&gt;define-record-procedures&lt;/code&gt; supports specifying signatures as part of the form, instantly enabling properties quantifying over such records.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;The following people contributed to this release:&lt;/p&gt;

&lt;p&gt;Aleksej Saushev, Alex Knauth, Alexander Hedges, Alexander Shopov, Alexis King, Andrew Kent, Asumu Takikawa, Ben Greenman, Celeste Hollenbeck, Craig Allen, Don March, Georges Dup√©ron, Gustavo Massaccesi, James Bornholt, Jay McCarthy, Jerry James, John Clements, Juan Francisco Cantero Hurtado, Leandro Facchinetti, Leif Andersen, Matthew Butterick, Matthew Flatt, Matthias Felleisen, Max New, Mike Sperber, Phil Nguyen, Reid D McKenzie, Reuben Thomas, Robby Findler, Ryan Culpepper, Sam Tobin-Hochstadt, Shu-Hung You, Spencer Florence, Stephen Chang, Tim Brown, Tony Garnock-Jones, Vincent St-Amour, WarGrey Gyoudmon Ju, and William G Hatch.&lt;/p&gt;

&lt;p&gt;Feedback Welcome&lt;/p&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">(seventh RacketCon)</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2017/01/seventh-racketcon.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2017-01-seventh-racketcon-html</id>
  <published>2017-01-20T08:22:45Z</published>
  <updated>2017-01-20T08:22:45Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Vincent St-Amour&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racketeers,&lt;/p&gt;

&lt;p&gt;(seventh RacketCon) will be held on October 7th, followed by Racketeer Office Hours on October 8th. This year, RacketCon will be in Seattle, WA, with support from the Racket group at the University of Washington.&lt;/p&gt;

&lt;p&gt;RacketCon is a yearly event where members of the Racket community get together, featuring talks and demos about the things you do with Racket.&lt;/p&gt;

&lt;p&gt;Racketeer Office Hours is a new event that we&amp;rsquo;re trying out this year. It is a free-form day for Racketeers to get together and collaborate on ongoing projects, start new ones, and get help and advice from other members of the community.&lt;/p&gt;

&lt;p&gt;Registration is not open yet, but we&amp;rsquo;ll let you know when it is.&lt;/p&gt;

&lt;p&gt;See you in Seattle!&lt;/p&gt;

&lt;p&gt;Vincent St-Amour, Matthew Butterick, and Matthew Flatt with help from Emina Torlak and Amanda Robles at UW&lt;/p&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">The redesigned Racket blog</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2016/12/the-redesigned-racket-blog.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2016-12-the-redesigned-racket-blog-html</id>
  <published>2016-12-14T05:21:20Z</published>
  <updated>2016-12-14T05:21:20Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Matthew Butterick&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I love Racket. But a few months ago, I really wanted to kill this blog.&lt;/p&gt;

&lt;p&gt;Why? Because who reads blogs, right? It&amp;rsquo;s like getting 4% interest on your savings ‚Äî so 2006. This is Racket.¬†We&amp;rsquo;re from the future. No, really. We even have a &lt;a href="http://docs.racket-lang.org/future-visualizer"&gt;futures visualizer&lt;/a&gt;. Take a look. Do you visualize any blogs?&lt;/p&gt;

&lt;p&gt;But my amigo &lt;a href="http://homes.soic.indiana.edu/samth/"&gt;Sam Tobin-Hochstadt&lt;/a&gt; had some wise words. &amp;ldquo;MB,&amp;rdquo; he said, &amp;ldquo;we&amp;rsquo;re not killing the blog. But tell you what: we&amp;rsquo;ll let you redesign it.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;OK! Yeah! I&amp;rsquo;ll show you!&amp;rdquo;&lt;/p&gt;

&lt;p&gt;And this is really Sam&amp;rsquo;s genius. After you talk to him, not only have you entirely changed your mind, you&amp;rsquo;ve volunteered to do all the work.&lt;/p&gt;

&lt;p&gt;But man, blogs. Have you seen the first blog ever, from 1994? Good news ‚Äî¬†&lt;a href="http://www.links.net/vita/web/start/original.html"&gt;it&amp;rsquo;s still online&lt;/a&gt;. For the first couple years they were known as &lt;em&gt;personal websites&lt;/em&gt;. Then they were called &lt;em&gt;weblogs&lt;/em&gt;. Then just &lt;em&gt;blogs&lt;/em&gt;. For a while after that, it seemed like everyone was starting a blog. Then everyone was redesigning a blog. Then everyone was ignoring a blog.&lt;/p&gt;

&lt;p&gt;Racket didn&amp;rsquo;t have an official blog back then ‚Äî¬†this one was started in 2007 ‚Äî¬†but there are some interesting blog-like records in the archives. For instance, the &lt;a href="https://github.com/racket/racket/blob/ddf6985020d7dd11d17cd42b1746bd853667fc2b/racket/collects/racket/HISTORY.txt"&gt;&lt;code&gt;HISTORY.txt&lt;/code&gt;&lt;/a&gt; file in the main repo. It chronicles every release back to version 0.27, in September 1995. AFAIK that code is still used today.&lt;/p&gt;

&lt;p&gt;Today, blogging persists. But most of today&amp;rsquo;s tools are calculated to make it as easy as possible. Too easy, perhaps? Not to sound curmudgeonly. But to my mind, the diaristic aspects of blogs were always incidental. Their most important purpose was to give millions of nerds a pretext to learn about web technology. In the ‚Äô70s, these nerds were typing out &lt;a href="http://www.vintage-basic.net/games.html"&gt;BASIC computer games&lt;/a&gt;. These days, I suppose they&amp;rsquo;re all writing their own JavaScript front-end frameworks. Ten years from now, what ‚Äî¬†harvesting dilithium crystals in the delta quadrant? (I&amp;rsquo;m being coy. I do have a &lt;a href="http://docs.racket-lang.org/future-visualizer"&gt;futures visualizer&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;So, the Racket blog. My major objection is that until yesterday, it was built on the moldering skeleton of &lt;a href="http://blogger.com"&gt;Blogger&lt;/a&gt;, which has, against all odds, stumbled into this century. Merely a small cut above &lt;a href="http://gizmodo.com/5983574/remember-the-hilarious-horror-of-geocities-with-this-website"&gt;Geocities&lt;/a&gt;. Surely we Racketeers could do better.&lt;/p&gt;

&lt;p&gt;I turned to Greg Hendershott&amp;rsquo;s static-blog engine &lt;a href="https://github.com/greghendershott/frog"&gt;Frog&lt;/a&gt;. A very slick Racket package that turns Markdown source files into HTML. If you must blog ‚Äî¬†please try it.&lt;/p&gt;

&lt;p&gt;The rest of the design draws on the typography &amp;amp; color themes I used for the &lt;a href="http://docs.racket-lang.org"&gt;Racket documentation&lt;/a&gt; ‚Äî still the best-looking docs in the business. For the headlines, I added something new ‚Äî the &lt;a href="https://www.cooperhewitt.org/open-source-at-cooper-hewitt/cooper-hewitt-the-typeface-by-chester-jenkins/"&gt;Cooper Hewitt typeface&lt;/a&gt;, designed for the namesake Smithsonian museum. Very lovely and totally free.&lt;/p&gt;

&lt;p&gt;Thank you to Sam Tobin-Hochstadt, Greg Hendershott, Vincent St-Amour, and Robby Findler for helping me complete this project. As Matthias Felleisen did in &lt;a href="/2007/05/macros-matter.html"&gt;his first post&lt;/a&gt; for this blog, I dedicate my work &amp;ldquo;to all things macros and everything else that matters in Racket.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;PS. I did succeed in killing the comments form. Not everything from the ‚Äô90s needs to be preserved.&lt;/p&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">Racket v6.7</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2016/10/racket-v67.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2016-10-racket-v67-html</id>
  <published>2016-10-26T03:04:00Z</published>
  <updated>2016-10-26T03:04:00Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Vincent St-Amour&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racket version 6.7 is now available from &lt;a href="http://racket-lang.org/"&gt;http://racket-lang.org/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;Racket supports building graphical applications on Android through the &lt;code&gt;racket-android&lt;/code&gt; project: https://github.com/jeapostrophe/racket-android&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The Racket REPL comes with line-editing, command and result history, and various meta-commands out of the box, via the &lt;code&gt;racket/interactive&lt;/code&gt; module. See the &lt;code&gt;racket/interactive&lt;/code&gt; and &lt;code&gt;xrepl&lt;/code&gt; documentation for details.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The package system supports authentication when installing packages from git, using the &lt;code&gt;raco pkg config git-checkout-credentials&lt;/code&gt; configuration option.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;HTTP libraries, as well as &lt;code&gt;raco pkg&lt;/code&gt;, support proxying via HTTP CONNECT.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket provides typed versions of &lt;code&gt;racket/os&lt;/code&gt; and &lt;code&gt;racket/db/sqlite&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;PLT_COMPILED_FILE_CHECK&lt;/code&gt; environment variable provides more fine-grained control over when &lt;code&gt;.zo&lt;/code&gt; files are consulted.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The documentation search supports searching for &lt;code&gt;#lang&lt;/code&gt;s and &lt;code&gt;#reader&lt;/code&gt;s via the &amp;ldquo;L:&amp;rdquo; and &amp;ldquo;R:&amp;rdquo; search prefixes.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;file/glob&lt;/code&gt; module implements globbing for path-strings.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Optimizations in the bytecode compiler improve performance for structure, list, string, and byte-string operations.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;The following people contributed to this release:&lt;/p&gt;

&lt;p&gt;Alex Knauth, Alex Harsanyi, Alexis King, Andrew Kent, Asumu Takikawa, Ben Greenman, Brian Lachance, Chongkai Zhu, Daniel Feltey, Georges Dup√©ron, Gustavo Massaccesi, Jay McCarthy, John Clements, Jonathan Schuster, Leif Andersen, Marc Burns, Matthew Butterick, Matthew Flatt, Matthias Felleisen, Mike Sperber, Robby Findler, Rohin Shah, Ryan Culpepper, Sam Tobin-Hochstadt, Spencer Florence, Stephen Chang, Stephen De Gabrielle, Tim Brown, Tony Garnock-Jones, Vincent St-Amour, WarGrey Gyoudmon Ju, and William J. Bowman.&lt;/p&gt;

&lt;p&gt;Feedback Welcome&lt;/p&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">Racket v6.6</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2016/07/racket-v66.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2016-07-racket-v66-html</id>
  <published>2016-07-22T03:04:00Z</published>
  <updated>2016-07-22T03:04:00Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Vincent St-Amour&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racket version 6.6 is now available from &lt;a href="http://racket-lang.org/"&gt;http://racket-lang.org/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;The new Macro Profiler command-line tool (&lt;code&gt;raco macro-profiler&lt;/code&gt;) shows how macros contribute to the final expanded code size of a program.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket supports intersection types. This allows the type system to track more information, and for programmers to express more precise types.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket produces up to 4x smaller compiled files compared with Racket 6.5, reducing the size of the Racket distribution by 50M.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket issues warnings in cases where the contract generated for &lt;code&gt;Any&lt;/code&gt; was not strict enough in the past. These warnings will become errors in a future release. Warnings are enabled via View -&amp;gt; Show Log in DrRacket, and shown by default on command-line Racket.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket enforces uses of &lt;code&gt;cast&lt;/code&gt; more correctly, by checking both the &amp;ldquo;casted-to&amp;rdquo; and &amp;ldquo;casted-from&amp;rdquo; types. Previously, only the former were checked. In some cases, this will produce contract errors in programs that did not have errors before.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;&lt;code&gt;syntax-parse&lt;/code&gt; raises an error when an ellipsis pattern has an empty match rather than diverging, and it logs a warning when it statically detects a nullable pattern, such as &lt;code&gt;((~seq) ...)&lt;/code&gt;. In the next version of Racket, it will reject the pattern instead, and it will remove special handling that currently makes some uses of such patterns terminate.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;&lt;code&gt;htdp/dir&lt;/code&gt;: The &lt;code&gt;create-dir&lt;/code&gt; function delivers data information for files in a new field. The domain of its functions are backwards compatible.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;The following people contributed to this release:&lt;/p&gt;

&lt;p&gt;Alex Knauth, Alexander Shopov, Alexis King, Andrew Kent, Asumu Takikawa, Ben Greenman, Bernardo Sulzbach, Brian Lachance, Chris Jester-Young, Dan Feltey, Eric Dobson, Georges Dup√©ron, Gustavo Massaccesi, James Bornholt, Jay McCarthy, John Clements, Leandro Facchinetti, Leif Andersen, Maksim Kochkin, Matthew Flatt, Matthias Felleisen, Mike Sperber, Paul Stansifer, Pedro Caldeira, Philip McGrath, Robby Findler, Ryan Culpepper, Sam Tobin-Hochstadt, Spencer Florence, Stephen Chang, Stephen De Gabrielle, Tim Brown, Tony Garnock-Jones, Vincent St-Amour, WarGrey Gyoudmon Ju, William J. Bowman, and Zeina Migeed.&lt;/p&gt;

&lt;p&gt;Feedback Welcome&lt;/p&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">Racket v6.5</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2016/04/racket-v65.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2016-04-racket-v65-html</id>
  <published>2016-04-28T03:04:00Z</published>
  <updated>2016-04-28T03:04:00Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Ryan Culpepper&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racket version 6.5 is now available from &lt;a href="http://racket-lang.org/"&gt;http://racket-lang.org/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;Typed Racket and the &lt;code&gt;racket/contract&lt;/code&gt; library generate code with lower overhead, speeding up typed/untyped interaction in a number of gradual typing programs we studied.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Macros written using &lt;code&gt;syntax-parse&lt;/code&gt; automatically emit more accurate error messages.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The contract profiler captures costs from more contract combinators, including all those in the main distribution.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Hash table and set iteration, via both existing and new non-generic sequences, performs better, up to twice as fast on microbenchmarks.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The Racket optimizer detects many more optimization opportunities, including when variables always hold numbers.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The db library supports single-result CALL statements in MySQL.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;net/dns&lt;/code&gt; library supports SRV records.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;racket/unix-socket&lt;/code&gt; library supports listen and accept operations.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;The following people contributed to this release:&lt;/p&gt;

&lt;p&gt;Adrien Tateno, Alex Knauth, Alexander Shopov, Alexis King, Andrew Kent, Asumu Takikawa, Ben Greenman, Chen Xiao, Chris Jester-Young, Daniel Feltey, Eric Dobson, Georges Dup√©ron, Gustavo Massaccesi, Ian Harris, Jay McCarthy, Jens Axel S√∏gaard, John Clements, Leandro Facchinetti, Lehi Toskin, Leif Andersen, ≈Åukasz DƒÖbek, Marc Kaufmann, Matthew Flatt, Matthias Felleisen, Michael McConville, Mike Sperber, Paul Stansifer, Philippe Meunier, Robby Findler, Rodrigo Setti, Ryan Culpepper, Sam Caldwell, Sam Tobin-Hochstadt, Sorawee Porncharoenwase, Spencer Florence, Stephen Chang, Tony Garnock-Jones, Vincent St-Amour, WarGrey Gyoudmon Ju, and William J. Bowman.&lt;/p&gt;

&lt;p&gt;Feedback Welcome&lt;/p&gt;
&lt;!-- more--&gt;</content></entry>
 <entry>
  <title type="text">Racket Web Server Security Vulnerability</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2016/02/racket-web-server-security-vulnerability.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2016-02-racket-web-server-security-vulnerability-html</id>
  <published>2016-02-08T06:05:00Z</published>
  <updated>2016-02-08T06:05:00Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Sam Tobin-Hochstadt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We recently discovered a serious security vulnerability in the Racket web server, which can lead to unintended disclosure of files on the machine running the web server. This vulnerability is fixed in &lt;a href="../../2016/02/racket-v64.html"&gt;Racket version 6.4&lt;/a&gt;, just released, and we encourage people to upgrade to that version.&lt;/p&gt;

&lt;p&gt;The vulnerability affects web servers that serve static files using the &lt;code&gt;#:extra-files-paths&lt;/code&gt; option, including the default value of this option. If you do not use the Racket web serve to serve static files, or you do so via a mechanism that does not use the &lt;code&gt;make-url-&amp;gt;path&lt;/code&gt; function, then you are likely not vulnerable. Affected web serves will allow specially-crafted URLs to access files outside of the specified paths, potentially exposing any file that the web server process is able to read.&lt;/p&gt;

&lt;p&gt;If you cannot immediately upgrade to version 6.4, we have provided a package catalog with updated versions of the &amp;ldquo;web-server-lib&amp;rdquo; package for versions of Racket back to 6.0. That catalog is located at&lt;/p&gt;

&lt;p&gt;&lt;a href="http://download.racket-lang.org/patches/web-server-1/"&gt;http://download.racket-lang.org/patches/web-server&amp;ndash;1/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To use it to upgrade your Racket installation, add it as a catalog using &lt;code&gt;raco pkg config&lt;/code&gt;. To make this process easier, you can download the Racket script available &lt;a href="https://gist.github.com/samth/c81e1e2fabc744759970"&gt;here&lt;/a&gt;. Then run:&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;div class="pygments"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ racket add-catalog.rkt
$ raco pkg update -i web-server-lib
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;If you need advice on updating Racket installations older than version 6.0, please let us know and we will provide them.&lt;/p&gt;

&lt;p&gt;To test that your Racket installation is fixed, you can run &lt;a href="https://gist.github.com/samth/740cc39eb6c0d9bd7bc3"&gt;the program here&lt;/a&gt;. It will print whether your installation is out of date.&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">Racket v6.4</title>
  <link rel="alternate" href="http://blog.racket-lang.org/2016/02/racket-v64.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-blog-racket-lang-org:-2016-02-racket-v64-html</id>
  <published>2016-02-08T03:04:00Z</published>
  <updated>2016-02-08T03:04:00Z</updated>
  <author>
   <name>The Unknown Author</name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;posted by Ryan Culpepper&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Racket version 6.4 is now available from &lt;a href="http://racket-lang.org/"&gt;http://racket-lang.org/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;We fixed a security vulnerability in the web server. The existing web server is vulnerable to a navigation attack if it is also enabled to serve files statically; that is, any file readable by the web server is accessible remotely. For more information, see &lt;a href="../../2016/02/racket-web-server-security-vulnerability.html"&gt;this post&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;DrRacket&amp;rsquo;s scrolling is faster.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Incremental garbage-collection mode can eliminate long pauses in a program. For example, incremental mode is useful for avoiding pauses in games and animations.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Programs must specifically request incremental mode with &lt;code&gt;(collect-garbage 'incremental)&lt;/code&gt;, but libraries such as &lt;code&gt;2htdp/universe&lt;/code&gt; include the request as part of the library&amp;rsquo;s implementation.&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;The default package catalog is an HTTPS address instead of HTTP, and package operations properly validate server certificates when using HTTPS.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Documentation may define their own categories for the manual top-level page by using strings, rather than only symbols that name pre-defined categories.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The Racket cheat sheet is included in the main distribution.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;DrRacket is available in Bulgarian, thanks to Alexander Shopov.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The contract Typed Racket generates for the &lt;code&gt;Any&lt;/code&gt; type is more permissive, allowing more typed/untyped programs to work without contract errors.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Redex supports binding specifications; describe which variables bind in which expressions and your metafunctions and reduction relations automatically become scope-sensitive. Thanks to Paul Stansifer for this improvement.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;All &lt;code&gt;pict&lt;/code&gt; functions accept &lt;code&gt;pict-convertible&lt;/code&gt;s. This allows for transparent interoperability between &lt;code&gt;pict&lt;/code&gt; and libraries like &lt;code&gt;2htdp/image&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;The &lt;code&gt;raco profile&lt;/code&gt; and &lt;code&gt;raco contract-profile&lt;/code&gt; commands provide easy access to profiling tools, without requiring program modifications.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Feedback Welcome&lt;/p&gt;
&lt;!-- more--&gt;

&lt;hr /&gt;

&lt;p&gt;Great work! and thank you.&lt;/p&gt;

&lt;p&gt;I was wondering why isn&amp;rsquo;t incremental garbage collection the default option?&lt;/p&gt;

&lt;p&gt;‚Äî &lt;em&gt;Harikrishnan, 8 February 2016&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Incremental mode has shorter GC pauses, but it tends to use more memory and use more time overall. Those trade-offs are usually worthwhile for interactive programs, but not for batch programs.&lt;/p&gt;

&lt;p&gt;Given the trade-offs, non-incremental mode is a more transparent default. It&amp;rsquo;s easy to tell when an interactive program suffers from pauses and needs to turn on incremental mode. It would be more difficult to notice that a batch program runs too slowly because incremental mode hasn&amp;rsquo;t been disabled.&lt;/p&gt;

&lt;p&gt;(Incremental mode uses more memory because it moves objects to the old generation sooner, and because the old generation is not compacted. Incremental mode uses more time because extra steps are needed to pause and resume traversal of the old generation ‚Äì and also because it uses more memory.)&lt;/p&gt;

&lt;p&gt;‚Äî &lt;em&gt;Matthew Flatt, 9 February 2016&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;</content></entry></feed>